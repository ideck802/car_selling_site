[{"/home/talking_human/Documents/github/car_selling_site/src/index.js":"1","/home/talking_human/Documents/github/car_selling_site/src/search.js":"2","/home/talking_human/Documents/github/car_selling_site/src/images.js":"3","/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js":"4","/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js":"5","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js":"6","/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js":"7","/home/talking_human/Documents/github/car_selling_site/src/components/search.js":"8","/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js":"9","/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js":"10","/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js":"11","/home/talking_human/Documents/github/car_selling_site/src/filters.js":"12","/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js":"13"},{"size":13860,"mtime":1620433368482,"results":"14","hashOfConfig":"15"},{"size":26342,"mtime":1631697034145,"results":"16","hashOfConfig":"15"},{"size":631,"mtime":1622753847695,"results":"17","hashOfConfig":"15"},{"size":375,"mtime":1617675839819,"results":"18","hashOfConfig":"15"},{"size":1176,"mtime":1617675839821,"results":"19","hashOfConfig":"15"},{"size":4437,"mtime":1631962789787,"results":"20","hashOfConfig":"15"},{"size":1041,"mtime":1617675839781,"results":"21","hashOfConfig":"15"},{"size":6813,"mtime":1631698646929,"results":"22","hashOfConfig":"15"},{"size":1189,"mtime":1626676938417,"results":"23","hashOfConfig":"15"},{"size":20004,"mtime":1617675839783,"results":"24","hashOfConfig":"15"},{"size":854,"mtime":1630998921565,"results":"25","hashOfConfig":"15"},{"size":28116,"mtime":1631952500651,"results":"26","hashOfConfig":"15"},{"size":13580,"mtime":1631696798822,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1bl3nea",{"filePath":"31","messages":"32","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/home/talking_human/Documents/github/car_selling_site/src/index.js",[],["59","60"],"/home/talking_human/Documents/github/car_selling_site/src/search.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport './css/search.css';\r\nimport images from './images';\r\nimport DropDown from './components/drop_down';\r\nimport Tabs from './components/tabs';\r\nimport Accordion from './components/accordion';\r\nimport Search from './components/search';\r\nimport { makesList } from './components/makes_models';\r\nimport vehicles from './vehicleCardList';\r\nimport Filters from './filters';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nclass SearchForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    const searchParam = new URLSearchParams(window.location.search);\r\n    const distancesArray = ['0', '25', '50', '75', '100', '250', '500', 'unlimited'];\r\n    var bt = searchParam.get('btype').toLowerCase();\r\n    var ftr = searchParam.get('ftr').toLowerCase();\r\n    var fuel = searchParam.get('fuel').toLowerCase();\r\n    var drive = searchParam.get('drive').toLowerCase();\r\n    var trans = searchParam.get('trans').toLowerCase();\r\n    var cyl = searchParam.get('cyl').toLowerCase();\r\n    var extor = searchParam.get('extor').toLowerCase();\r\n    var intor = searchParam.get('intor').toLowerCase();\r\n\r\n    super(props);\r\n    this.state = {\r\n      search_tag: '',\r\n      zipCode: searchParam.getAll('zip')[0],\r\n      distance: distancesArray.indexOf(searchParam.getAll('distance').toString() || '0'),\r\n      distances: distancesArray,\r\n      financeOrPrice: searchParam.getAll('price'),\r\n      priceBoxes: searchParam.getAll('pr'),\r\n      priceSlider: searchParam.getAll('pr'),\r\n      yearBoxes: searchParam.getAll('year'),\r\n      yearSlider: searchParam.getAll('year'),\r\n      mileageBoxes: searchParam.getAll('miles'),\r\n      mileageSlider: searchParam.getAll('miles'),\r\n      downFinanceSlider: searchParam.getAll('down'),\r\n      downFinanceBoxes: searchParam.getAll('down'),\r\n      monthlyFinanceSlider: searchParam.getAll('pay'),\r\n      monthlyFinanceBoxes: searchParam.getAll('pay'),\r\n      typing: false,\r\n      typingTimeout: 0,\r\n      modelBoxes: {\r\n        acuraModelBoxes: [], alfaModelBoxes: [], audiModelBoxes: [], bmwModelBoxes: [], buickModelBoxes: [],\r\n        cadillacModelBoxes: [], chevyModelBoxes: [], chryslerModelBoxes: [], dodgeModelBoxes: [],\r\n        fiatModelBoxes: [], fordModelBoxes: [], genesisModelBoxes: [], gmcModelBoxes: [], hondaModelBoxes: [],\r\n        hyundaiModelBoxes: [], infinitiModelBoxes: [], jaguarModelBoxes: [], jeepModelBoxes: [], kiaModelBoxes: [],\r\n        roverModelBoxes: [], lexusModelBoxes: [], lincolnModelBoxes: [], maseratiModelBoxes: [], mazdaModelBoxes: [],\r\n        benzModelBoxes: [], miniModelBoxes: [], mitsubishiModelBoxes: [], nissanModelBoxes: [], porscheModelBoxes: [],\r\n        ramModelBoxes: [], saabModelBoxes: [], scionModelBoxes: [], smartModelBoxes: [], subaruModelBoxes: [],\r\n        teslaModelBoxes: [], toyotaModelBoxes: [], volksModelBoxes: [], volvoModelBoxes: []\r\n      },\r\n      bodyType: bt,\r\n      check_suv: bt.includes('suv'), check_truck: bt.includes('truck'), check_sedan: bt.includes('sedan'),\r\n      check_crossover: bt.includes('crossover'), check_coupe: bt.includes('coupe'),\r\n      check_convertible: bt.includes('convertible'), check_sport: bt.includes('sport'), check_van: bt.includes('van'),\r\n      check_wagon: bt.includes('wagon'),\r\n\r\n      features: ftr,\r\n      cooled_seats: ftr.includes('cooled_seats'),heated_seats: ftr.includes('heated_seats'),\r\n      heated_steering: ftr.includes('heated_steering'),leather_seats: ftr.includes('leather_seats'),\r\n      climate_control: ftr.includes('climate_control'),sun_roof: ftr.includes('sun_roof'),\r\n      dvd_player: ftr.includes('dvd_player'),prem_sound: ftr.includes('prem_sound'),\r\n      rear_system: ftr.includes('rear_system'),satillite_radio: ftr.includes('satillite_radio'),\r\n      auto_brake: ftr.includes('auto_brake'),back_cam: ftr.includes('back_cam'),\r\n      blind_sensor: ftr.includes('blind_sensor'),lane_depart: ftr.includes('lane_depart'),\r\n      park_sense: ftr.includes('park_sense'),secure_alarm: ftr.includes('secure_alarm'),\r\n      adapt_cruise: ftr.includes('adapt_cruise'),android_auto: ftr.includes('android_auto'),\r\n      apple_carplay: ftr.includes('apple_carplay'),aux_port: ftr.includes('aux_port'),\r\n      bluetooth: ftr.includes('bluetooth'),gps_nav: ftr.includes('gps_nav'),hud: ftr.includes('hud'),\r\n      keyless_start: ftr.includes('keyless_start'),mobile_net: ftr.includes('mobile_net'),\r\n      power_seats: ftr.includes('power_seats'),trip_pc: ftr.includes('trip_pc'),\r\n      turn_mirrors: ftr.includes('turn_mirrors'),adjust_steering: ftr.includes('adjust_steering'),\r\n      auto_park: ftr.includes('auto_park'),disability: ftr.includes('disability'),\r\n      heat_mirror: ftr.includes('heat_mirror'),power_doors: ftr.includes('power_doors'),\r\n      power_trunk: ftr.includes('power_trunk'),rain_sense: ftr.includes('rain_sense'),\r\n      roof_rack: ftr.includes('roof_rack'),stability: ftr.includes('stability'),\r\n      third_row: ftr.includes('third_row'),tire_sense: ftr.includes('tire_sense'),tow_hitch: ftr.includes('tow_hitch'),\r\n\r\n      exterior: extor,\r\n      exterior_black: extor.includes('black'), exterior_silver: extor.includes('silver'),\r\n      exterior_white: extor.includes('white'), exterior_gray: extor.includes('gray'),\r\n      exterior_red: extor.includes('red'), exterior_blue: extor.includes('blue'), exterior_gold: extor.includes('gold'),\r\n      exterior_orange: extor.includes('orange'), exterior_green: extor.includes('green'),\r\n      exterior_brown: extor.includes('brown'), exterior_other: extor.includes('other'),\r\n\r\n      interior: intor,\r\n      interior_black: intor.includes('black'), interior_silver: intor.includes('silver'),\r\n      interior_white: intor.includes('white'), interior_gray: intor.includes('gray'),\r\n      interior_red: intor.includes('red'), interior_blue: intor.includes('blue'), interior_gold: intor.includes('gold'),\r\n      interior_orange: intor.includes('orange'), interior_green: intor.includes('green'),\r\n      interior_brown: intor.includes('brown'), interior_other: intor.includes('other'),\r\n\r\n      mpgSlider: searchParam.getAll('mpg'),\r\n      mpgBoxes: searchParam.getAll('mpg'),\r\n\r\n      fuelType: fuel,\r\n      fuelGas: fuel.includes('fuelgas'), fuelHybrid: fuel.includes('fuelhybrid'),\r\n      fuelElectric: fuel.includes('fuelelectric'), fuelOther: fuel.includes('fuelother'),\r\n\r\n      driveType: drive,\r\n      frontWheel: drive.includes('frontwheel'), allWheel: drive.includes('allwheel'),\r\n      rearWheel: drive.includes('rearwheel'),\r\n\r\n      tranny: trans,\r\n      autoTrans: trans.includes('autotrans'), manualTrans: trans.includes('manualtrans'),\r\n\r\n      cylCount: cyl,\r\n      fourCylinder: cyl.includes('fourcylinder'), sixCylinder: cyl.includes('sixcylinder'),\r\n      eightCylinder: cyl.includes('eightcylinder'), otherCylinder: cyl.includes('othercylinder'),\r\n\r\n      makeParam: searchParam.get('make'),\r\n      modelParam: searchParam.get('model'),\r\n\r\n      isFetching: false,\r\n      zips: 'all',\r\n\r\n      updateUrlTimeout: 0\r\n    };\r\n\r\n    this.init = this.init.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleModelBoxChange = this.handleModelBoxChange.bind(this);\r\n    this.labelCreator = this.labelCreator.bind(this);\r\n    this.featureCreator = this.featureCreator.bind(this);\r\n    this.colorCreator = this.colorCreator.bind(this);\r\n    this.changeTabValue = this.changeTabValue.bind(this);\r\n    this.changeDistance = this.changeDistance.bind(this);\r\n    this.vehicleCardCreator = this.vehicleCardCreator.bind(this);\r\n    this.getParams = this.getParams.bind(this);\r\n    this.updateDistance = this.updateDistance.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    makesList.map((make, i) => {\r\n      make.models.map((model, j) => (\r\n        ('|' + this.state.modelParam.toLowerCase()).includes('|' + model.toLowerCase() + '|') ?\r\n          this.handleModelBoxChange(make.id, j, this.props.history, make, model, true) : ''\r\n      ));\r\n    });\r\n  };\r\n\r\n  btypeGlobal = new URLSearchParams(window.location.search).get('btype');\r\n  ftrGlobal = new URLSearchParams(window.location.search).get('ftr');\r\n  fuelGlobal = new URLSearchParams(window.location.search).get('fuel');\r\n  driveGlobal = new URLSearchParams(window.location.search).get('drive');\r\n  transGlobal = new URLSearchParams(window.location.search).get('trans');\r\n  cylGlobal = new URLSearchParams(window.location.search).get('cyl');\r\n  extorGlobal = new URLSearchParams(window.location.search).get('extor');\r\n  intorGlobal = new URLSearchParams(window.location.search).get('intor');\r\n\r\n  handleInputChange(event, history) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    if (name.includes('check_')) {\r\n      var tempBtypeParam = this.btypeGlobal;\r\n      var varName = name.replace('check_', '');\r\n\r\n      if (value === true) {\r\n        tempBtypeParam = tempBtypeParam + (varName + '|');\r\n      } else {\r\n        tempBtypeParam = tempBtypeParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.btypeGlobal = tempBtypeParam;\r\n      this.setState({\r\n        [name]: value,\r\n        bodyType: tempBtypeParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && !name.includes('fuel') && !name.includes('Wheel') &&\r\n      !name.includes('Trans') && !name.includes('Cylinder') && !name.includes('exterior_') &&\r\n      !name.includes('interior_')\r\n    ) {\r\n      var tempFtrParam = this.ftrGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempFtrParam = tempFtrParam + (varName + '|');\r\n      } else {\r\n        tempFtrParam = tempFtrParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.ftrGlobal = tempFtrParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        features: tempFtrParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_fuel')) {\r\n      var tempfuelParam = this.fuelGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempfuelParam = tempfuelParam + (varName + '|');\r\n      } else {\r\n        tempfuelParam = tempfuelParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.fuelGlobal = tempfuelParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        fuelType: tempfuelParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Wheel')) {\r\n      var tempDriveParam = this.driveGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempDriveParam = tempDriveParam + (varName + '|');\r\n      } else {\r\n        tempDriveParam = tempDriveParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.driveGlobal = tempDriveParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        driveType: tempDriveParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Trans')) {\r\n      var tempTransParam = this.transGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempTransParam = tempTransParam + (varName + '|');\r\n      } else {\r\n        tempTransParam = tempTransParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.transGlobal = tempTransParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        tranny: tempTransParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Cylinder')) {\r\n      var tempCylParam = this.cylGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempCylParam = tempCylParam + (varName + '|');\r\n      } else {\r\n        tempCylParam = tempCylParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.cylGlobal = tempCylParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        cylCount: tempCylParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('exterior_')) {\r\n      var tempExtorParam = this.extorGlobal;\r\n      var varName = name.replace('exterior_', '');\r\n\r\n      if (value === true) {\r\n        tempExtorParam = tempExtorParam + (varName + '|');\r\n      } else {\r\n        tempExtorParam = tempExtorParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.extorGlobal = tempExtorParam;\r\n      this.setState({\r\n        ['exterior_' + varName]: value,\r\n        exterior: tempExtorParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('interior_')) {\r\n      var tempIntorParam = this.intorGlobal;\r\n      var varName = name.replace('interior_', '');\r\n\r\n      if (value === true) {\r\n        tempIntorParam = tempIntorParam + (varName + '|');\r\n      } else {\r\n        tempIntorParam = tempIntorParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.intorGlobal = tempIntorParam;\r\n      this.setState({\r\n        ['interior_' + varName]: value,\r\n        interior: tempIntorParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name === 'zipCode') {\r\n      if (this.state.updateUrlTimeout !== 0) {\r\n        clearTimeout(this.state.updateUrlTimeout);\r\n      }\r\n      this.setState({\r\n        updateUrlTimeout: setTimeout(() => {\r\n          this.updateDistance(history);\r\n        }, 1000)\r\n      });\r\n\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n\r\n  onNumberChange(boxVarName, sliderVarName, index, history, e) {\r\n\r\n    const self = this;\r\n\r\n    var tempVar = self.state[boxVarName].slice();\r\n\r\n    tempVar[index] = e.target.value;\r\n\r\n    this.setState({\r\n      [boxVarName]: tempVar\r\n    });\r\n\r\n    if (self.state.typingTimeout) {\r\n      clearTimeout(self.state.typingTimeout);\r\n    }\r\n    self.setState({\r\n      typing: false,\r\n      typingTimeout: setTimeout(function() {\r\n        var finalTempVar = self.state[sliderVarName].slice();\r\n\r\n        if (parseInt(e.target.value) < e.target.min) {\r\n          e.target.value = e.target.min;\r\n        };\r\n        if (parseInt(e.target.value) > e.target.max) {\r\n          e.target.value = e.target.max;\r\n        };\r\n\r\n        finalTempVar[index] = e.target.value;\r\n\r\n        self.setState({\r\n          [sliderVarName]: finalTempVar,\r\n          [sliderVarName.replace('Slider', 'Boxes')]: finalTempVar\r\n        });\r\n\r\n        self.updateURL(history);\r\n      }, 1000)\r\n    });\r\n  }\r\n\r\n  enterPressed(sliderVarName, index, history, e) {\r\n    var code = e.key || e.which;\r\n    if (code === 13 || code === 'Enter') { //13 is the enter keycode\r\n      if (e.target.name === 'zipCode') {\r\n        this.setState({\r\n          [sliderVarName]: e.target.value\r\n        }, () => (\r\n          this.updateDistance(history)\r\n        ));\r\n        e.preventDefault();\r\n      } else {\r\n        var finalTempVar = this.state[sliderVarName].slice();\r\n\r\n        if (parseInt(e.target.value) < e.target.min) {\r\n          e.target.value = e.target.min;\r\n        };\r\n        if (parseInt(e.target.value) > e.target.max) {\r\n          e.target.value = e.target.max;\r\n        };\r\n\r\n        finalTempVar[index] = e.target.value;\r\n\r\n        this.setState({\r\n          [sliderVarName]: finalTempVar\r\n        }, () => (\r\n          this.updateURL(history)\r\n        ));\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  labelCreator(forInput, fileName, value) {\r\n    if (this.state[forInput] === false) {\r\n      return <label htmlFor={forInput}>\r\n        <i className='checkmark fas fa-check'></i>\r\n        <p>{value}</p>\r\n        <img src={fileName} draggable='false' alt={fileName}/>\r\n      </label>;\r\n    } else {\r\n      return <label htmlFor={forInput} className='selected'>\r\n        <i className='checkmark fas fa-check'></i>\r\n        <p>{value}</p>\r\n        <img src={fileName} draggable='false' alt={fileName}/>\r\n      </label>;\r\n    }\r\n  }\r\n\r\n  modelParamGlobal = new URLSearchParams(window.location.search).get('model');\r\n\r\n  handleModelBoxChange(varName, pos, history, makeName, modelName, startSync) {\r\n    if (startSync === true) {\r\n      var tempVar = this.state.modelBoxes[varName + 'ModelBoxes'].slice();\r\n\r\n      tempVar[pos] = true;\r\n\r\n      var tempModelBoxes = this.state.modelBoxes;\r\n      tempModelBoxes[varName + 'ModelBoxes'] = tempVar;\r\n\r\n      this.setState({\r\n        modelBoxes: tempModelBoxes\r\n      });\r\n    } else {\r\n      const value = !this.state.modelBoxes[varName + 'ModelBoxes'][pos];\r\n\r\n      var tempVar = this.state.modelBoxes[varName + 'ModelBoxes'].slice();\r\n\r\n      tempVar[pos] = value;\r\n\r\n      var tempModelBoxes = this.state.modelBoxes;\r\n      tempModelBoxes[varName + 'ModelBoxes'] = tempVar;\r\n\r\n      var tempModelParam = this.modelParamGlobal;\r\n      if (value === true) {\r\n        tempModelParam = tempModelParam + (modelName.replace(makeName + ' ', '') + '|');\r\n      } else {\r\n        tempModelParam = tempModelParam.replace((modelName.replace(makeName + ' ', '') + '|'), '');\r\n      }\r\n\r\n      this.modelParamGlobal = tempModelParam;\r\n      this.setState({\r\n        modelBoxes: tempModelBoxes,\r\n        modelParam: tempModelParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    }\r\n  }\r\n  //<i className='checkmark fas fa-check'></i>\r\n  featureCreator(displayText, value, history) {\r\n    return <label htmlFor={value} className={(this.state[value] === true ? ('checked') : (''))}>\r\n\r\n      {displayText}\r\n      <input\r\n        name={'feature_' + value}\r\n        type='checkbox'\r\n        id={value}\r\n        checked={this.state[value]}\r\n        onChange={(e) => this.handleInputChange(e, history)}\r\n        />\r\n    </label>;\r\n  }\r\n\r\n  colorCreator(name, color, value, history, classname) {\r\n    return <label htmlFor={value} className={(this.state[value] === true ?\r\n        ('color checked ' + classname) : ('color ' + classname))}>\r\n      <div className='color-circle' style={{background: color}}>\r\n        <i className='checkmark fas fa-check'></i>\r\n      </div>\r\n      {name}\r\n      <input\r\n        name={value}\r\n        type='checkbox'\r\n        id={value}\r\n        checked={this.state[value]}\r\n        onChange={(e) => this.handleInputChange(e, history)}\r\n        />\r\n    </label>;\r\n  }\r\n\r\n  changeTabValue(value) {\r\n    if (value === 0) {\r\n      this.setState({\r\n        financeOrPrice: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        financeOrPrice: false\r\n      });\r\n    }\r\n  }\r\n\r\n  changeDistance(value, history) {\r\n    if (this.state.zipCode.length === 5 && value !== 7) {\r\n      //this.fetchZips(this.state.zipCode, this.state.distances[value], history);\r\n    } else {\r\n      this.setState({\r\n        zips: 'all'\r\n      }, () => (\r\n        this.updateURL(history)\r\n      ));\r\n    }\r\n    this.setState({\r\n      distance: value\r\n    });\r\n  }\r\n\r\n  updateDistance(history) {\r\n    if (this.state.zipCode.length === 5 && this.state.distance !== 7) {\r\n      //this.fetchZips(this.state.zipCode, this.state.distances[this.state.distance], history);\r\n    } else {\r\n      this.setState({\r\n        zips: 'all'\r\n      }, () => (\r\n        this.updateURL(history)\r\n      ));\r\n    }\r\n  }\r\n\r\n  vehicleCardCreator() {\r\n    return vehicles.map((vehicle) => {\r\n      if (\r\n        vehicle.make.toLowerCase().includes(this.state.makeParam.toLowerCase()) &&\r\n        (('|' + this.state.modelParam.toLowerCase()).includes('|' + vehicle.model.toLowerCase() + '|') ||\r\n        this.state.modelParam === '') &&\r\n        new RegExp(this.state.bodyType.toLowerCase().slice(0, -1)).test(vehicle.bodyType.toLowerCase()) &&\r\n        vehicle.year >= this.state.yearSlider[0] && vehicle.year <= this.state.yearSlider[1] &&\r\n        vehicle.miles >= this.state.mileageSlider[0] && vehicle.miles <= this.state.mileageSlider[1] &&\r\n        this.state.features.slice(0, -1).split('|').every(\r\n          item => vehicle.features.includes(item) || this.state.features === ''\r\n        ) &&\r\n        vehicle.mpg <= this.state.mpgSlider &&\r\n        (this.state.fuelType.toLowerCase().includes(vehicle.fuel.toLowerCase()) || this.state.fuelType === '') &&\r\n        (this.state.driveType.toLowerCase().includes(vehicle.driveType.toLowerCase()) || this.state.driveType === '') &&\r\n        (this.state.tranny.toLowerCase().includes(vehicle.tranny.toLowerCase()) || this.state.tranny === '') &&\r\n        (this.state.cylCount.toLowerCase().includes(vehicle.cylinders.toLowerCase()) || this.state.cylCount === '') &&\r\n        (this.state.exterior.toLowerCase().includes(vehicle.extColor.toLowerCase()) || this.state.exterior === '') &&\r\n        (this.state.interior.toLowerCase().includes(vehicle.intColor.toLowerCase()) || this.state.interior === '') &&\r\n        (this.state.zips.includes(vehicle.location) || this.state.zips === 'all')\r\n      ) {\r\n        if (\r\n          this.state.financeOrPrice &&\r\n          (vehicle.price >= this.state.priceSlider[0]) && (vehicle.price <= this.state.priceSlider[1])\r\n        ) {\r\n          return <div className='card'>\r\n            <i className='checkmark fas fa-check'></i>\r\n            <p>{vehicle.make}</p>\r\n            <p>{vehicle.model}</p>\r\n            <img src='alt' draggable='false' alt='akt'/>\r\n          </div>;\r\n        } else if (\r\n          !this.state.financeOrPrice &&\r\n          vehicle.cashDown <= this.state.downFinanceSlider &&\r\n          vehicle.monthPay <= this.state.monthlyFinanceSlider\r\n        ) {\r\n          return <div className='card'>\r\n            <i className='checkmark fas fa-check'></i>\r\n            <p>{vehicle.make}</p>\r\n            <p>{vehicle.model}</p>\r\n            <img src='alt' draggable='false' alt='akt'/>\r\n          </div>;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getParams(location) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    return {\r\n      make: searchParams.get('make') || '',\r\n      model: searchParams.get('model') || '',\r\n    };\r\n  }\r\n\r\n  setParams({\r\n    price='', pr=['', ''], down='', pay='', make='', model='', btype='', year=['', ''], miles=['', ''], ftr='', mpg='',\r\n    fuel='', drive='', trans='', cyl='', extor='', intor='', zip='', distance='',\r\n  }) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set('price', price);\r\n    searchParams.set('pr', pr[0]);\r\n    searchParams.append('pr', pr[1]);\r\n    searchParams.set('down', down);\r\n    searchParams.set('pay', pay);\r\n    searchParams.set('make', make);\r\n    searchParams.set('model', model);\r\n    searchParams.set('btype', btype);\r\n    searchParams.set('year', year[0]);\r\n    searchParams.append('year', year[1]);\r\n    searchParams.set('miles', miles[0]);\r\n    searchParams.append('miles', miles[1]);\r\n    searchParams.set('ftr', ftr);\r\n    searchParams.set('mpg', mpg);\r\n    searchParams.set('fuel', fuel);\r\n    searchParams.set('drive', drive);\r\n    searchParams.set('trans', trans);\r\n    searchParams.set('cyl', cyl);\r\n    searchParams.set('extor', extor);\r\n    searchParams.set('intor', intor);\r\n    searchParams.set('zip', zip);\r\n    searchParams.set('distance', distance);\r\n    return searchParams.toString();\r\n  }\r\n\r\n  updateInputValue = e => this.setState({modelParam: e.target.value});\r\n\r\n  updateURL = (history, isTextbox, event) => {\r\n    //if (isTextbox === true) {\r\n    //  if (event.keyCode === 13) {\r\n    //    const url = this.setParams({make: this.state.makeParam, model: this.state.modelParam});\r\n    //    history.push(`?${url}`);\r\n    //  } else {\r\n    //    return;\r\n    //  }\r\n    //}\r\n\r\n    const url = this.setParams({\r\n      price: this.state.financeOrPrice,\r\n      pr: this.state.priceSlider,\r\n      down: this.state.downFinanceSlider,\r\n      pay: this.state.monthlyFinanceSlider,\r\n      make: this.state.makeParam,\r\n      model: this.state.modelParam,\r\n      btype: this.state.bodyType,\r\n      year: this.state.yearSlider,\r\n      miles: this.state.mileageSlider,\r\n      ftr: this.state.features,\r\n      mpg: this.state.mpgSlider,\r\n      fuel: this.state.fuelType,\r\n      drive: this.state.driveType,\r\n      trans: this.state.tranny,\r\n      cyl: this.state.cylCount,\r\n      extor: this.state.exterior,\r\n      intor: this.state.interior,\r\n      zip: this.state.zipCode,\r\n      distance: this.state.distances[this.state.distance]\r\n    });\r\n    //do not forget the \"?\" !\r\n    history.push(`?${url}`);\r\n  };\r\n\r\n  // red api key is only for localhost. must change for builds\r\n  // red Q6a4aY87oakQI2BA7YMUIwrqHux0j0BtEV6VAk2egIh5gbzooIdBEcLjoOBpLqsY\r\n  fetchZips = (centerZip, distance, history) => {\r\n      this.setState({isFetching: true});\r\n      fetch('https://www.zipcodeapi.com/rest/' +\r\n        'js-PM7I8cxEjfxbX05xYqOa46UXb93zWmxX4amPH8agb5IDqnv3LhwcijDk5Tag3nnc/radius.json/' +\r\n        centerZip + '/' + distance + '/mile?minimal')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({\r\n          zips: Object.values(result.zip_codes),\r\n          isFetching: false\r\n        }, () => (\r\n          this.updateURL(history)\r\n        ));\r\n      })\r\n      .catch(exception => {\r\n        console.log(exception);\r\n        this.setState({isFetching: false});\r\n      });\r\n    };\r\n\r\n  updateUrlFromTimeout(history) {\r\n    if (this.state.updateUrlTimeout !== 0) {\r\n      clearTimeout(this.state.updateUrlTimeout);\r\n    }\r\n    this.setState({\r\n      updateUrlTimeout: setTimeout(() => {\r\n        this.updateURL(history);\r\n      }, 1000)\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Route path='/'\r\n          render={(props) => (\r\n            <Filters {...props} th={this} />\r\n          )}/>\r\n        </Router>\r\n        {this.state.isFetching ? <div className='loading-ani'><i className='fas fa-car-side'></i></div> : ''}\r\n        <div className='vehicle-cards'>\r\n          {this.vehicleCardCreator()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<SearchForm />, document.getElementById('search_form'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/home/talking_human/Documents/github/car_selling_site/src/images.js",[],"/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js",["81","82","83","84","85","86","87","88","89"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport images from './images';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <ul>\r\n    <li><a href='#'><img src={images.suv} alt='suv'/>SUVs</a></li>\r\n    <li><a href='#'><img src={images.pickup} alt='pickup truck'/>Pickup Trucks</a></li>\r\n    <li><a href='#'><img src={images.sedan} alt='sedan'/>Sedans</a></li>\r\n    <li><a href='#'><img src={images.crossover} alt='crossover'/>Crossovers</a></li>\r\n    <li><a href='#'><img src={images.coupe} alt='coupe'/>Coupes</a></li>\r\n    <li><a href='#'><img src={images.convertible} alt='convertible'/>Convertibles</a></li>\r\n    <li><a href='#'><img src={images.sports} alt='sports car'/>Sports Cars</a></li>\r\n    <li><a href='#'><img src={images.van} alt='van'/>Vans</a></li>\r\n    <li><a href='#'><img src={images.wagon} alt='wagon'/>Wagons</a></li>\r\n  </ul>\r\n  , document.getElementById('vehicle_list'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/search.js",["90","91","92"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SimpleBar from 'simplebar';\r\n\r\nimport { makesList, modelsList } from './makes_models';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nfunction getIndex(value, arr, prop) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (value.toLowerCase().includes(arr[i][prop].toLowerCase())) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1; //to handle the case where the value doesn't exist\r\n}\r\n\r\nfunction getModelsIndex(value, arr, prop) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    for (var j = 0; j < arr[i][prop].length; j++) {\r\n      if (arr[i].name + ' ' + arr[i][prop][j] === value) {\r\n        return j;\r\n      }\r\n    }\r\n  }\r\n  return -1; //to handle the case where the value doesn't exist\r\n}\r\n\r\nclass Search extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // exclude column list from filter\r\n      excludeColumns: ['id', 'models'],\r\n      makesSearch: makesList,\r\n      modelsSearch: [],\r\n      searchText: '',\r\n      isOpen: '',\r\n      isClosing: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  }\r\n\r\n  // handle change event of search input\r\n  handleChange(event) {\r\n    this.setState({\r\n      searchText: event.target.value\r\n    });\r\n    this.filterData(event.target.value);\r\n  };\r\n\r\n  // filter records by search text\r\n  filterData(value) {\r\n    const lowercasedValue = value.toLowerCase().trim().replace('chevy', 'chevrolet').replace('vw', 'volkswagen')\r\n    .replace('caddy', 'cadillac').replace('cadd', 'cadillac').replace('lr', 'land rover')\r\n    .replace('mbz', 'mercedes-benz');\r\n    if (lowercasedValue === '') {\r\n      this.setState({\r\n        makesSearch: makesList,\r\n        modelsSearch: []\r\n      });\r\n    } else {\r\n      const filteredMakes = makesList.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n          this.state.excludeColumns.includes(key) ? false : item[key].toString().toLowerCase().includes(lowercasedValue)\r\n        );\r\n      });\r\n\r\n      const filteredModels = modelsList.filter(item =>\r\n        item.toString().toLowerCase().includes(lowercasedValue)\r\n      );\r\n      this.setState({\r\n        makesSearch: filteredMakes,\r\n        modelsSearch: filteredModels\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.slidingTimeout) {\r\n      clearTimeout(this.slidingTimeout);\r\n    }\r\n  }\r\n\r\n  openMake(make) {\r\n    if (make === '') {\r\n      this.setState({\r\n        isClosing: true\r\n      });\r\n      this.slidingTimeout = setTimeout(() => {\r\n        this.setState({\r\n          isOpen: make,\r\n          isClosing: false\r\n        });\r\n        this.slidingTimeout = null;\r\n      }, 500);\r\n    } else {\r\n      this.setState({\r\n        isOpen: make,\r\n        isClosing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  setModelsTrue(event, make) {\r\n    make.models.map((model, j) =>\r\n      this.props.handleBoxChange(make.id, j, this.props.history, make.name, model)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='search-container'>\r\n        <div className='searchbox'>\r\n          <input\r\n            type='text'\r\n            placeholder='Type to search...'\r\n            value={this.state.searchText}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className='box-container'>\r\n          <ul>\r\n            {this.state.makesSearch.map((make, i) => {\r\n              return <li key={i}>\r\n                <button onClick={this.openMake.bind(this, i)}>\r\n                  {make.name}\r\n                </button>\r\n                {this.state.isOpen === i && <div className={this.state.isClosing === true ? 'models-bar is-closing'\r\n                  : 'models-bar'}>\r\n                  <button className='left-spacer' onClick={this.openMake.bind(this, '')}></button>\r\n                  <div className='container'>\r\n                    <p>\r\n                      <button onClick={this.openMake.bind(this, '')}>\r\n                        <i className='fas fa-arrow-left'></i>\r\n                        Back to Makes\r\n                      </button>\r\n                    </p>\r\n                    <div>\r\n                      <h3>{make.name}</h3>\r\n                      <button onClick={(e) => (this.setModelsTrue(e, make))}>Select All</button>\r\n                    </div>\r\n                    <ul data-simplebar>\r\n                      {make.models.map((model, j) =>\r\n                        <li key={j}>\r\n                          <label htmlFor={'modelBox' + j}>\r\n                            <p>{model}</p>\r\n                            {this.props.value[make.id + 'ModelBoxes'][j] === true ?\r\n                              <i className='checkmark fas fa-check'></i> : ''}\r\n                          </label>\r\n                          <input\r\n                            type='checkbox'\r\n                            name={make.id}\r\n                            id={'modelBox' + j}\r\n                            checked={this.props.value[make.id + 'ModelBoxes'][j] || ''}\r\n                            onChange={(e) =>\r\n                              this.props.handleBoxChange(make.id, j, this.props.history, make.name, model\r\n                            )} />\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>}\r\n              </li>;\r\n            })}\r\n          </ul>\r\n          {this.state.makesSearch.length === 0 && <span>No matching models to display</span>}\r\n          {this.state.modelsSearch.length > 0 && <p>Models</p>}\r\n          <ul>\r\n            {this.state.modelsSearch.map((model, i) => {\r\n              return <li key={i}>\r\n                <label htmlFor={'modelBox2' + i}>\r\n                  <p>{model}</p>\r\n                  {this.props.value[\r\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\r\n                  ][getModelsIndex(model, makesList, 'models')] ? <i className='checkmark fas fa-check'></i> : ''}\r\n                </label>\r\n                <input\r\n                  type='checkbox'\r\n                  name={model}\r\n                  id={'modelBox2' + i}\r\n                  checked={this.props.value[\r\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\r\n                  ][getModelsIndex(model, makesList, 'models')] || ''}\r\n                  onChange={(e) => this.props.handleBoxChange(\r\n                    makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\r\n                    , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\r\n              </li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js",[],"/home/talking_human/Documents/github/car_selling_site/src/filters.js",["93","94","95","96","97","98","99"],"/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js",["100","101","102","103","104","105","106"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar';\n\nimport { makesList, modelsList } from './makes_models';\nimport DropDown from './drop_down';\nimport 'simplebar/dist/simplebar.min.css';\n\nfunction getIndex(value, arr, prop) {\n  for (var i = 0; i < arr.length; i++) {\n    if (value.toLowerCase().includes(arr[i][prop].toLowerCase())) {\n      return i;\n    }\n  }\n  return -1; //to handle the case where the value doesn't exist\n}\n\nfunction getModelsIndex(value, arr, prop) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr[i][prop].length; j++) {\n      if (arr[i].name + ' ' + arr[i][prop][j] === value) {\n        return j;\n      }\n    }\n  }\n  return -1; //to handle the case where the value doesn't exist\n}\n\nfunction GetZips(props) {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [zips, setZips] = useState([]);\n\n  console.log('getzips');\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  // red js-PM......3nnc is the key only for localhost testing. must change for builds\n  // red to Q6a4aY87oakQI2BA7YMUIwrqHux0j0BtEV6VAk2egIh5gbzooIdBEcLjoOBpLqsY\n  useEffect(() => {\n    fetch('https://www.zipcodeapi.com/rest/' +\n    'js-PM7I8cxEjfxbX05xYqOa46UXb93zWmxX4amPH8agb5IDqnv3LhwcijDk5Tag3nnc/radius.json/' +\n    props.centerZip + '/' + props.distance + '/mile?minimal')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setZips(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    console.log(zips.zip_codes);\n    return (\n      <ul>\n      </ul>\n    );\n  }\n}\n\nclass AddTags extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      thst: props.th,\n      modelsSearch: [],\n      tagsSearch: [],\n      tagsList: [\n        ['SUVs', 'check_suv'], ['Trucks', 'check_truck'], ['Sedans', 'check_sedan'], ['Crossovers', 'check_crossover'],\n        ['Coupes', 'check_coupe'], ['Convertibles', 'check_convertible'], ['Vans', 'check_van'],\n        ['Wagons', 'check_wagon'],\n      ],\n      searchText: '',\n      displayResults: true,\n      renderNumOptns: false,\n      renderYearOptns: false,\n      inputNum: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.filterData = this.filterData.bind(this);\n    this.changeNumbers = this.changeNumbers.bind(this);\n    this.onKeyDownHandler = this.onKeyDownHandler.bind(this);\n\n    this.wrapperRef = React.createRef();\n    this.textBoxRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  // handle change event of search text input\n  handleChange(event) {\n    this.setState({\n      searchText: event.target.value\n    });\n    this.filterData(event.target.value);\n  };\n\n  // filter records by search text\n  filterData(value) {\n    const lowercasedValue = value.toLowerCase().trim().replace('chevy', 'chevrolet').replace('vw', 'volkswagen')\n    .replace('caddy', 'cadillac').replace('cadd', 'cadillac').replace('lr', 'land rover')\n    .replace('mbz', 'mercedes-benz');\n\n    const filteredModels = modelsList.filter(item =>\n      item.toString().toLowerCase().includes(lowercasedValue)\n    );\n    const filteredTags = this.state.tagsList.filter(item =>\n      item[0].toString().toLowerCase().includes(lowercasedValue)\n    );\n\n    if (!isNaN(lowercasedValue)) {\n      this.setState({\n        renderNumOptns: true,\n        inputNum: lowercasedValue\n      });\n      if (lowercasedValue.length === 4) {\n        this.setState({\n          renderYearOptns: true\n        });\n      } else {\n        this.setState({\n          renderYearOptns: false\n        });\n      }\n    } else {\n      this.setState({\n        renderNumOptns: false,\n        renderYearOptns: false,\n        inputNum: 0\n      });\n    }\n\n    this.setState({\n      modelsSearch: filteredModels,\n      tagsSearch: filteredTags\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.setState({\n        displayResults: false\n      });\n    }\n    if (this.textBoxRef && this.textBoxRef.current.contains(event.target)) {\n      this.setState({\n        displayResults: true\n      });\n    }\n  }\n\n  changeNumbers(isYear=false, down=false, monthly=false, miles=false) {\n    if (isYear) {\n      if (this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0])) {\n        this.state.thst.setState({\n          yearSlider: [1800, 2090],\n          yearBoxes: [1800, 2090]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      } else if (this.state.inputNum >= 1800 && this.state.inputNum <= 2090) {\n        this.state.thst.setState({\n          yearSlider: [this.state.inputNum, this.state.inputNum],\n          yearBoxes: [this.state.inputNum, this.state.inputNum]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      }\n    } else if (down && this.state.inputNum >= 100 && this.state.inputNum <= 99990) {\n      this.state.thst.setState({\n        downFinanceSlider: [this.state.inputNum],\n        downFinanceBoxes: [this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else if (monthly && this.state.inputNum >= 100 && this.state.inputNum <= 99990) {\n      this.state.thst.setState({\n        monthlyFinanceSlider: [this.state.inputNum],\n        monthlyFinanceBoxes: [this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else if (miles && this.state.inputNum <= 200000) {\n      this.state.thst.setState({\n        mileageSlider: [0, this.state.inputNum],\n        mileageBoxes: [0, this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else {\n      if (this.state.inputNum <= 999990) {\n        this.state.thst.setState({\n          values: [100, this.state.inputNum],\n          priceBoxes: [100, this.state.inputNum]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      }\n    }\n  }\n\n  onKeyDownHandler = e => {\n    if (e.keyCode === 13 && this.state.renderNumOptns) {\n      if (this.state.inputNum.length === 4) {\n        this.changeNumbers(true);\n      } else {\n        this.changeNumbers();\n      }\n    }\n  };\n\n  render() {\n    const modelsToRender = modelsList.map((model, i) => {\n      if (this.props.modlBoxes[\n        makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n      ][getModelsIndex(model, makesList, 'models')]) {\n        return <li key={i}>\n          <label htmlFor={'modelBox2' + i}>\n            <p>{model}</p>\n            <i className='fas fa-times'></i>\n          </label>\n          <input\n            type='checkbox'\n            name={model}\n            id={'modelBox2' + i}\n            checked={this.props.modlBoxes[\n              makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n            ][getModelsIndex(model, makesList, 'models')] || ''}\n            onChange={(e) => this.props.handleBoxChange(\n              makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\n              , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\n        </li>;\n      }\n    });\n\n    const tagsToRender = this.state.tagsList.map((tag, i) => {\n      if (this.state.thst.state[tag[1]]) {\n        return <li key={i}>\n          <label htmlFor={'tag' + i}>\n            <p>{tag[0]}</p>\n            <i className='fas fa-times'></i>\n          </label>\n          <input\n            type='checkbox'\n            name={tag[1]}\n            id={'tag' + i}\n            checked={this.state.thst.state[tag[1]] || ''}\n            onChange={(e) => this.props.handleInputChange(e, this.props.history)} />\n        </li>;\n      }\n    });\n\n    return (\n      <div className='search-container' ref={this.wrapperRef}>\n        <div className='searchbox'>\n          <input\n            type='text'\n            placeholder='Type to search...'\n            value={this.state.searchText}\n            onKeyDown={this.onKeyDownHandler}\n            onChange={this.handleChange}\n            ref={this.textBoxRef}\n          />\n        {\n          (!modelsToRender.every((item) => {return item === undefined;}) ||\n          !tagsToRender.every((item) => {return item === undefined;}) ||\n          this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0])) &&\n          <DropDown btnText='Change Tags' isChanging={false} className='tags-dd'>\n            <ul>\n              {this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0]) && <li>\n                <label htmlFor='year'>\n                  <p>{this.state.thst.state.yearSlider[0]}</p>\n                  <i className='fas fa-times'></i>\n                </label>\n                <input\n                  type='checkbox'\n                  name={this.state.thst.state.yearSlider[0]}\n                  id='year'\n                  checked={this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0]) || ''}\n                  onChange={this.changeNumbers} />\n              </li>}\n              {modelsToRender}\n              {tagsToRender}\n            </ul>\n          </DropDown>\n        }\n        </div>\n\n        {(this.state.modelsSearch.length > 0 || this.state.tagsSearch.length > 0 || this.state.renderNumOptns) &&\n          this.state.searchText != '' && this.state.displayResults && <div className='box-container'>\n          <ul>\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers()}>\n                <p>Vehicles less than ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, true)}>\n                <p>Cash down at ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, false, true)}>\n                <p>Monthly payment at ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, false, false, true)}>\n                <p>Vehicles with less than {this.state.inputNum} miles</p>\n              </button>\n            </li>}\n            {this.state.renderYearOptns && <li>\n              <label htmlFor='setYear'>\n                {this.state.thst.state.yearSlider.every(e => e === this.state.inputNum) ?\n                  <i className='checkmark fas fa-check'></i> : ''}\n                <p>Vehicles with year {this.state.inputNum}</p>\n              </label>\n              <input\n                type='checkbox'\n                name={this.state.inputNum}\n                id='setYear'\n                checked={this.state.thst.state.yearSlider.every(e => e === this.state.inputNum) || ''}\n                onChange={(e) => this.changeNumbers(true)} />\n            </li>}\n            {this.state.modelsSearch.map((model, i) => {\n              return <li key={i}>\n                <label htmlFor={'modelBox2' + i}>\n                  {this.props.modlBoxes[\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n                  ][getModelsIndex(model, makesList, 'models')] ? <i className='checkmark fas fa-check'></i> : ''}\n                  <p>{model}</p>\n                </label>\n                <input\n                  type='checkbox'\n                  name={model}\n                  id={'modelBox2' + i}\n                  checked={this.props.modlBoxes[\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n                  ][getModelsIndex(model, makesList, 'models')] || ''}\n                  onChange={(e) => this.props.handleBoxChange(\n                    makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\n                    , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\n              </li>;\n            })}\n            {this.state.tagsSearch.map((tag, i) => {\n              return <li key={i}>\n                <label htmlFor={'tag' + i}>\n                  {this.state.thst.state[tag[1]] ? <i className='checkmark fas fa-check'></i> : ''}\n                  <p>{tag[0]}</p>\n                </label>\n                <input\n                  type='checkbox'\n                  name={tag[1]}\n                  id={'tag' + i}\n                  checked={this.state.thst.state[tag[1]] || ''}\n                  onChange={(e) => this.props.handleInputChange(e, this.props.history)} />\n              </li>;\n            })}\n          </ul>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default AddTags;\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":42,"nodeType":"113","messageId":"114","endLine":3,"endColumn":52},{"ruleId":"111","severity":1,"message":"115","line":3,"column":54,"nodeType":"113","messageId":"114","endLine":3,"endColumn":65},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"117","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"118","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":12},{"ruleId":"111","severity":1,"message":"119","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"120","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":14},{"ruleId":"111","severity":1,"message":"121","line":13,"column":10,"nodeType":"113","messageId":"114","endLine":13,"endColumn":15},{"ruleId":"111","severity":1,"message":"122","line":13,"column":17,"nodeType":"113","messageId":"114","endLine":13,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":143,"column":29,"nodeType":"125","messageId":"126","endLine":143,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":187,"column":11,"nodeType":"113","messageId":"129","endLine":187,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":204,"column":11,"nodeType":"113","messageId":"129","endLine":204,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":221,"column":11,"nodeType":"113","messageId":"129","endLine":221,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":238,"column":11,"nodeType":"113","messageId":"129","endLine":238,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":255,"column":11,"nodeType":"113","messageId":"129","endLine":255,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":272,"column":11,"nodeType":"113","messageId":"129","endLine":272,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":289,"column":11,"nodeType":"113","messageId":"129","endLine":289,"endColumn":18},{"ruleId":"127","severity":1,"message":"130","line":428,"column":11,"nodeType":"113","messageId":"129","endLine":428,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":432,"column":11,"nodeType":"113","messageId":"129","endLine":432,"endColumn":25},{"ruleId":"123","severity":1,"message":"132","line":523,"column":35,"nodeType":"125","messageId":"133","endLine":523,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":8,"column":9,"nodeType":"136","endLine":8,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":9,"column":9,"nodeType":"136","endLine":9,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":10,"column":9,"nodeType":"136","endLine":10,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":11,"column":9,"nodeType":"136","endLine":11,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":12,"column":9,"nodeType":"136","endLine":12,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":13,"column":9,"nodeType":"136","endLine":13,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":14,"column":9,"nodeType":"136","endLine":14,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":15,"column":9,"nodeType":"136","endLine":15,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":16,"column":9,"nodeType":"136","endLine":16,"endColumn":21},{"ruleId":"111","severity":1,"message":"137","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"138","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"139","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"140","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"141","line":3,"column":27,"nodeType":"113","messageId":"114","endLine":3,"endColumn":33},{"ruleId":"111","severity":1,"message":"142","line":3,"column":35,"nodeType":"113","messageId":"114","endLine":3,"endColumn":40},{"ruleId":"111","severity":1,"message":"115","line":3,"column":54,"nodeType":"113","messageId":"114","endLine":3,"endColumn":65},{"ruleId":"111","severity":1,"message":"143","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":16},{"ruleId":"111","severity":1,"message":"144","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":37,"column":15,"nodeType":"147","endLine":37,"endColumn":74},{"ruleId":"111","severity":1,"message":"138","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"139","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"148","line":29,"column":10,"nodeType":"113","messageId":"114","endLine":29,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":60,"column":6,"nodeType":"151","endLine":60,"endColumn":8,"suggestions":"152"},{"ruleId":"123","severity":1,"message":"132","line":236,"column":54,"nodeType":"125","messageId":"133","endLine":236,"endColumn":56},{"ruleId":"123","severity":1,"message":"132","line":259,"column":59,"nodeType":"125","messageId":"133","endLine":259,"endColumn":61},{"ruleId":"153","severity":1,"message":"154","line":313,"column":33,"nodeType":"155","messageId":"156","endLine":313,"endColumn":35},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'images' is defined but never used.","'DropDown' is defined but never used.","'Tabs' is defined but never used.","'Accordion' is defined but never used.","'Search' is defined but never used.","'Range' is defined but never used.","'getTrackBackground' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'varName' is already defined.","redeclared","'tempVar' is already defined.","'tempModelBoxes' is already defined.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'PropTypes' is defined but never used.","'SimpleBar' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'vehicles' is defined but never used.","'reportWebVitals' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'GetZips' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.centerZip' and 'props.distance'. Either include them or remove the dependency array.","ArrayExpression",["159"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [props.centerZip, props.distance]",{"range":"162","text":"163"},[1887,1889],"[props.centerZip, props.distance]"]