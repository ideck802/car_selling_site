[{"/home/talking_human/Documents/github/car_selling_site/src/index.js":"1","/home/talking_human/Documents/github/car_selling_site/src/search.js":"2","/home/talking_human/Documents/github/car_selling_site/src/images.js":"3","/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js":"4","/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js":"5","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js":"6","/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js":"7","/home/talking_human/Documents/github/car_selling_site/src/components/search.js":"8","/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js":"9","/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js":"10","/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js":"11","/home/talking_human/Documents/github/car_selling_site/src/filters.js":"12","/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js":"13","/home/talking_human/Documents/github/car_selling_site/src/car_page.js":"14"},{"size":13873,"mtime":1632109022172,"results":"15","hashOfConfig":"16"},{"size":27308,"mtime":1632451076798,"results":"17","hashOfConfig":"16"},{"size":694,"mtime":1632108887477,"results":"18","hashOfConfig":"16"},{"size":375,"mtime":1617675839819,"results":"19","hashOfConfig":"16"},{"size":1176,"mtime":1617675839821,"results":"20","hashOfConfig":"16"},{"size":4437,"mtime":1631962789787,"results":"21","hashOfConfig":"16"},{"size":1647,"mtime":1632105102285,"results":"22","hashOfConfig":"16"},{"size":6813,"mtime":1631698646929,"results":"23","hashOfConfig":"16"},{"size":1189,"mtime":1626676938417,"results":"24","hashOfConfig":"16"},{"size":20004,"mtime":1617675839783,"results":"25","hashOfConfig":"16"},{"size":1432,"mtime":1632455695993,"results":"26","hashOfConfig":"16"},{"size":28108,"mtime":1632113206033,"results":"27","hashOfConfig":"16"},{"size":13580,"mtime":1631696798822,"results":"28","hashOfConfig":"16"},{"size":2935,"mtime":1632458909090,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bl3nea",{"filePath":"33","messages":"34","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/talking_human/Documents/github/car_selling_site/src/index.js",[],["63","64"],"/home/talking_human/Documents/github/car_selling_site/src/search.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"/home/talking_human/Documents/github/car_selling_site/src/images.js",[],"/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js",["85","86","87","88","89","90","91","92","93"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport images from './images';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <ul>\r\n    <li><a href='#'><img src={images.suv} alt='suv'/>SUVs</a></li>\r\n    <li><a href='#'><img src={images.pickup} alt='pickup truck'/>Pickup Trucks</a></li>\r\n    <li><a href='#'><img src={images.sedan} alt='sedan'/>Sedans</a></li>\r\n    <li><a href='#'><img src={images.crossover} alt='crossover'/>Crossovers</a></li>\r\n    <li><a href='#'><img src={images.coupe} alt='coupe'/>Coupes</a></li>\r\n    <li><a href='#'><img src={images.convertible} alt='convertible'/>Convertibles</a></li>\r\n    <li><a href='#'><img src={images.sports} alt='sports car'/>Sports Cars</a></li>\r\n    <li><a href='#'><img src={images.van} alt='van'/>Vans</a></li>\r\n    <li><a href='#'><img src={images.wagon} alt='wagon'/>Wagons</a></li>\r\n  </ul>\r\n  , document.getElementById('vehicle_list'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/search.js",["94","95","96"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SimpleBar from 'simplebar';\r\n\r\nimport { makesList, modelsList } from './makes_models';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nfunction getIndex(value, arr, prop) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (value.toLowerCase().includes(arr[i][prop].toLowerCase())) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1; //to handle the case where the value doesn't exist\r\n}\r\n\r\nfunction getModelsIndex(value, arr, prop) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    for (var j = 0; j < arr[i][prop].length; j++) {\r\n      if (arr[i].name + ' ' + arr[i][prop][j] === value) {\r\n        return j;\r\n      }\r\n    }\r\n  }\r\n  return -1; //to handle the case where the value doesn't exist\r\n}\r\n\r\nclass Search extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // exclude column list from filter\r\n      excludeColumns: ['id', 'models'],\r\n      makesSearch: makesList,\r\n      modelsSearch: [],\r\n      searchText: '',\r\n      isOpen: '',\r\n      isClosing: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  }\r\n\r\n  // handle change event of search input\r\n  handleChange(event) {\r\n    this.setState({\r\n      searchText: event.target.value\r\n    });\r\n    this.filterData(event.target.value);\r\n  };\r\n\r\n  // filter records by search text\r\n  filterData(value) {\r\n    const lowercasedValue = value.toLowerCase().trim().replace('chevy', 'chevrolet').replace('vw', 'volkswagen')\r\n    .replace('caddy', 'cadillac').replace('cadd', 'cadillac').replace('lr', 'land rover')\r\n    .replace('mbz', 'mercedes-benz');\r\n    if (lowercasedValue === '') {\r\n      this.setState({\r\n        makesSearch: makesList,\r\n        modelsSearch: []\r\n      });\r\n    } else {\r\n      const filteredMakes = makesList.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n          this.state.excludeColumns.includes(key) ? false : item[key].toString().toLowerCase().includes(lowercasedValue)\r\n        );\r\n      });\r\n\r\n      const filteredModels = modelsList.filter(item =>\r\n        item.toString().toLowerCase().includes(lowercasedValue)\r\n      );\r\n      this.setState({\r\n        makesSearch: filteredMakes,\r\n        modelsSearch: filteredModels\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.slidingTimeout) {\r\n      clearTimeout(this.slidingTimeout);\r\n    }\r\n  }\r\n\r\n  openMake(make) {\r\n    if (make === '') {\r\n      this.setState({\r\n        isClosing: true\r\n      });\r\n      this.slidingTimeout = setTimeout(() => {\r\n        this.setState({\r\n          isOpen: make,\r\n          isClosing: false\r\n        });\r\n        this.slidingTimeout = null;\r\n      }, 500);\r\n    } else {\r\n      this.setState({\r\n        isOpen: make,\r\n        isClosing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  setModelsTrue(event, make) {\r\n    make.models.map((model, j) =>\r\n      this.props.handleBoxChange(make.id, j, this.props.history, make.name, model)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='search-container'>\r\n        <div className='searchbox'>\r\n          <input\r\n            type='text'\r\n            placeholder='Type to search...'\r\n            value={this.state.searchText}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className='box-container'>\r\n          <ul>\r\n            {this.state.makesSearch.map((make, i) => {\r\n              return <li key={i}>\r\n                <button onClick={this.openMake.bind(this, i)}>\r\n                  {make.name}\r\n                </button>\r\n                {this.state.isOpen === i && <div className={this.state.isClosing === true ? 'models-bar is-closing'\r\n                  : 'models-bar'}>\r\n                  <button className='left-spacer' onClick={this.openMake.bind(this, '')}></button>\r\n                  <div className='container'>\r\n                    <p>\r\n                      <button onClick={this.openMake.bind(this, '')}>\r\n                        <i className='fas fa-arrow-left'></i>\r\n                        Back to Makes\r\n                      </button>\r\n                    </p>\r\n                    <div>\r\n                      <h3>{make.name}</h3>\r\n                      <button onClick={(e) => (this.setModelsTrue(e, make))}>Select All</button>\r\n                    </div>\r\n                    <ul data-simplebar>\r\n                      {make.models.map((model, j) =>\r\n                        <li key={j}>\r\n                          <label htmlFor={'modelBox' + j}>\r\n                            <p>{model}</p>\r\n                            {this.props.value[make.id + 'ModelBoxes'][j] === true ?\r\n                              <i className='checkmark fas fa-check'></i> : ''}\r\n                          </label>\r\n                          <input\r\n                            type='checkbox'\r\n                            name={make.id}\r\n                            id={'modelBox' + j}\r\n                            checked={this.props.value[make.id + 'ModelBoxes'][j] || ''}\r\n                            onChange={(e) =>\r\n                              this.props.handleBoxChange(make.id, j, this.props.history, make.name, model\r\n                            )} />\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>}\r\n              </li>;\r\n            })}\r\n          </ul>\r\n          {this.state.makesSearch.length === 0 && <span>No matching models to display</span>}\r\n          {this.state.modelsSearch.length > 0 && <p>Models</p>}\r\n          <ul>\r\n            {this.state.modelsSearch.map((model, i) => {\r\n              return <li key={i}>\r\n                <label htmlFor={'modelBox2' + i}>\r\n                  <p>{model}</p>\r\n                  {this.props.value[\r\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\r\n                  ][getModelsIndex(model, makesList, 'models')] ? <i className='checkmark fas fa-check'></i> : ''}\r\n                </label>\r\n                <input\r\n                  type='checkbox'\r\n                  name={model}\r\n                  id={'modelBox2' + i}\r\n                  checked={this.props.value[\r\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\r\n                  ][getModelsIndex(model, makesList, 'models')] || ''}\r\n                  onChange={(e) => this.props.handleBoxChange(\r\n                    makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\r\n                    , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\r\n              </li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js",[],"/home/talking_human/Documents/github/car_selling_site/src/filters.js",["97","98","99","100","101","102","103"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, useHistory, useLocation } from 'react-router-dom';\nimport './css/search.css';\nimport images from './images';\nimport DropDown from './components/drop_down';\nimport Tabs from './components/tabs';\nimport Accordion from './components/accordion';\nimport Search from './components/search';\nimport AddTags from './components/tags_search.js';\nimport vehicles from './vehicleCardList';\nimport { Range, getTrackBackground } from 'react-range';\nimport reportWebVitals from './reportWebVitals';\n\nconst Filters = (props) => {\n\n    const th = props.th;\n\n    const history = useHistory();\n\n    return (\n      <div className='filters'>\n        <div className='search-box'>\n          <AddTags modlBoxes={th.state.modelBoxes} handleBoxChange={th.handleModelBoxChange}\n            handleInputChange={th.handleInputChange} th={th} history={history}/>\n          <div className='second-row'>\n            <p>Near: </p>\n            <input\n              type='test'\n              name='zipCode'\n              placeholder='Zip code'\n              maxLength='5'\n              pattern='\\d*'\n              onKeyDown={th.onKeyDownHandler}\n              value={th.state.zipCode}\n              onChange={(e) => th.handleInputChange(e, history)}\n              onKeyDown={th.enterPressed.bind(th, 'zipCode', 0, history)} />\n            <DropDown btnText='Distance' isChanging={true} startValue={th.state.distance} his={history}>\n              <div className='placeholder' display='Distance'></div>\n              <div display='25 Miles' changeDis={th.changeDistance}></div>\n              <div display='50 Miles' changeDis={th.changeDistance}></div>\n              <div display='75 Miles' changeDis={th.changeDistance}></div>\n              <div display='100 Miles' changeDis={th.changeDistance}></div>\n              <div display='250 Miles' changeDis={th.changeDistance}></div>\n              <div display='500 Miles' changeDis={th.changeDistance}></div>\n              <div display='Unlimited' changeDis={th.changeDistance}></div>\n            </DropDown>\n            <button onClick={(e) => th.updateDistance(history)}>\n              <i className='fas fa-search'></i>\n            </button>\n          </div>\n        </div>\n        <div className='drop-downs'>\n          <DropDown btnText='Price' className='price' extraModalBtns={1}>\n            <Tabs changeTabValue={th.changeTabValue} startTab={th.state.financeOrPrice ? 0 : 1}>\n              <div label='Price' className='tab price-tab'>\n                <div className='slider-content'>\n                  <div className='inputs'>\n                    <label>Price Range</label>\n                    <span className='input-number'>$\n                      <input\n                        name='minPrice'\n                        type='number'\n                        id='minPrice'\n                        min='100'\n                        max={th.state.priceSlider[1]}\n                        value={th.state.priceBoxes[0]}\n                        onChange={th.onNumberChange.bind(th, 'priceBoxes', 'priceSlider', 0, history)}\n                        onKeyDown={th.enterPressed.bind(th, 'priceSlider', 0, history)} />\n                    </span>\n                    <p>-</p>\n                    <span className='input-number'>$\n                      <input\n                        name='maxPrice'\n                        type='number'\n                        id='maxPrice'\n                        min={th.state.priceSlider[0]}\n                        max='999990'\n                        value={th.state.priceBoxes[1]}\n                        onChange={th.onNumberChange.bind(th, 'priceBoxes', 'priceSlider', 1, history)}\n                        onKeyDown={th.enterPressed.bind(th, 'priceSlider', 1, history)} />\n                    </span>\n                  </div>\n                  <div className='slider-container'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={999990}\n                      values={th.state.priceSlider}\n                      onChange={(values) => th.setState({priceSlider: values, priceBoxes: values},\n                        th.updateUrlFromTimeout(history))}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.priceSlider,\n                            colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 999990\n                          })}} >\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div label='Finance' className='tab finance-tab'>\n                <div className='slider-container'>\n                  <div className='inputs'>\n                    <label htmlFor='downFinanceBoxes'>Cash Down</label>\n                    <span className='input-number'>$\n                      <input\n                        name='downFinanceBoxes'\n                        type='number'\n                        id='price1'\n                        min='100'\n                        max='99990'\n                        value={th.state.downFinanceBoxes}\n                        onChange={th.onNumberChange.bind(th, 'downFinanceBoxes', 'downFinanceSlider', 0, history)}\n                        onKeyDown={th.enterPressed.bind(th, 'downFinanceSlider', 0, history)} />\n                    </span>\n                  </div>\n                  <div className='slider'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={99990}\n                      values={th.state.downFinanceSlider}\n                      onChange={(values) => th.setState({downFinanceSlider: values, downFinanceBoxes: values},\n                        th.updateUrlFromTimeout(history))}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.downFinanceSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 99990\n                          })}} >\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className='slider-container'>\n                  <div className='inputs'>\n                    <label htmlFor='monthlyFinanceBoxes'>Monthly Payment</label>\n                    <span className='input-number'>$\n                      <input\n                        name='monthlyFinanceBoxes'\n                        type='number'\n                        id='price2'\n                        min='100'\n                        max='99990'\n                        value={th.state.monthlyFinanceBoxes}\n                        onChange={\n                          th.onNumberChange.bind(th, 'monthlyFinanceBoxes', 'monthlyFinanceSlider', 0, history)\n                        }\n                        onKeyDown={th.enterPressed.bind(th, 'monthlyFinanceSlider', 0, history)} />\n                    </span>\n                  </div>\n                  <div className='slider'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={99990}\n                      values={th.state.monthlyFinanceSlider}\n                      onChange={\n                        (values) => th.setState({monthlyFinanceSlider: values, monthlyFinanceBoxes: values},\n                          th.updateUrlFromTimeout(history))\n                      }\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.monthlyFinanceSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 99990\n                          })}}>\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tabs>\n          </DropDown>\n          <DropDown btnText='Make & Model' className='makemodel' extraModalBtns={1}>\n            <Search value={th.state.modelBoxes} handleBoxChange={th.handleModelBoxChange} th={th} history={history}/>\n          </DropDown>\n          <DropDown btnText='Body Type' className='body-types' extraModalBtns={1}>\n            <div className='container'>\n              <div className='body'>\n                {th.labelCreator('check_suv', images.suv, 'SUVs')}\n                <input\n                  name='check_suv'\n                  type='checkbox'\n                  id='check_suv'\n                  checked={th.state.check_suv}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_truck', images.pickup, 'Trucks')}\n                <input\n                  name='check_truck'\n                  type='checkbox'\n                  id='check_truck'\n                  checked={th.state.check_truck}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_sedan', images.sedan, 'Sedans')}\n                <input\n                  name='check_sedan'\n                  type='checkbox'\n                  id='check_sedan'\n                  checked={th.state.check_sedan}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_crossover', images.crossover, 'Crossovers')}\n                <input\n                  name='check_crossover'\n                  type='checkbox'\n                  id='check_crossover'\n                  checked={th.state.check_crossover}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_coupe', images.coupe, 'Coupes')}\n                <input\n                  name='check_coupe'\n                  type='checkbox'\n                  id='check_coupe'\n                  checked={th.state.check_coupe}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_convertible', images.convertible, 'Convertibles')}\n                <input\n                  name='check_convertible'\n                  type='checkbox'\n                  id='check_convertible'\n                  checked={th.state.check_convertible}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_van', images.van, 'Vans')}\n                <input\n                  name='check_van'\n                  type='checkbox'\n                  id='check_van'\n                  checked={th.state.check_van}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_wagon', images.wagon, 'Wagons')}\n                <input\n                  name='check_wagon'\n                  type='checkbox'\n                  id='check_wagon'\n                  checked={th.state.check_wagon}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='Year & Mileage' className='year-mile' extraModalBtns={1}>\n            <div className='container'>\n              <div className='slider-content'>\n                <div className='inputs'>\n                  <label>Year</label>\n                  <span className='input-number'>$\n                    <input\n                      name='minYear'\n                      type='number'\n                      id='minYear'\n                      min='1800'\n                      max={th.state.yearSlider[1]}\n                      value={th.state.yearBoxes[0]}\n                      onChange={th.onNumberChange.bind(th, 'yearBoxes', 'yearSlider', 0, history)}\n                      onKeyDown={th.enterPressed.bind(th, 'yearSlider', 0, history)} />\n                  </span>\n                  <p>-</p>\n                  <span className='input-number'>$\n                    <input\n                      name='maxYear'\n                      type='number'\n                      id='maxYear'\n                      min={th.state.yearSlider[0]}\n                      max='2090'\n                      value={th.state.yearBoxes[1]}\n                      onChange={th.onNumberChange.bind(th, 'yearBoxes', 'yearSlider', 1, history)}\n                      onKeyDown={th.enterPressed.bind(th, 'yearSlider', 1, history)} />\n                  </span>\n                </div>\n                <div className='slider-container'>\n                  <Range\n                    step={10}\n                    min={1800}\n                    max={2090}\n                    values={th.state.yearSlider}\n                    onChange={(values) => th.setState({yearSlider: values, yearBoxes: values},\n                      th.updateUrlFromTimeout(history))}\n                    renderTrack={({props, children}) => (\n                      <div {...props} style={{...props.style, background:\n                        getTrackBackground({\n                          values: th.state.yearSlider,\n                          colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                          min: 1800,\n                          max: 2090\n                        })}} >\n                        {children}\n                      </div>\n                    )}\n                    renderThumb={({props}) => (\n                      <div {...props} style={{...props.style}} />\n                    )}\n                  />\n                </div>\n              </div>\n              <div className='slider-content'>\n                <div className='inputs'>\n                  <label>Mileage</label>\n                  <span className='input-number'>$\n                    <input\n                      name='minMileage'\n                      type='number'\n                      id='minMileage'\n                      min='0'\n                      max={th.state.mileageSlider[1]}\n                      value={th.state.mileageBoxes[0]}\n                      onChange={th.onNumberChange.bind(th, 'mileageBoxes', 'mileageSlider', 0, history)}\n                      onKeyDown={th.enterPressed.bind(th, 'mileageSlider', 0, history)} />\n                  </span>\n                  <p>-</p>\n                  <span className='input-number'>$\n                    <input\n                      name='maxMileage'\n                      type='number'\n                      id='maxMileage'\n                      min={th.state.mileageSlider[0]}\n                      max='200000'\n                      value={th.state.mileageBoxes[1]}\n                      onChange={th.onNumberChange.bind(th, 'mileageBoxes', 'mileageSlider', 1, history)}\n                      onKeyDown={th.enterPressed.bind(th, 'mileageSlider', 1, history)} />\n                  </span>\n                </div>\n                <div className='slider-container'>\n                  <Range\n                    step={10}\n                    min={0}\n                    max={200000}\n                    values={th.state.mileageSlider}\n                    onChange={(values) => th.setState({mileageSlider: values, mileageBoxes: values},\n                      th.updateUrlFromTimeout(history))}\n                    renderTrack={({props, children}) => (\n                      <div {...props} style={{...props.style, background:\n                        getTrackBackground({\n                          values: th.state.mileageSlider,\n                          colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                          min: 0,\n                          max: 200000\n                        })}} >\n                        {children}\n                      </div>\n                    )}\n                    renderThumb={({props}) => (\n                      <div {...props} style={{...props.style}} />\n                    )}\n                  />\n                </div>\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='Features' className='features' extraModalBtns={1}>\n            <div className='container'>\n              <div>\n                <Accordion btnText='Comfort'>\n                  {th.featureCreator('Cooled Seats', 'cooled_seats', history)}\n                  {th.featureCreator('Heated Seats', 'heated_seats', history)}\n                  {th.featureCreator('Heated Steering Wheel', 'heated_steering', history)}\n                  {th.featureCreator('Leather Seats', 'leather_seats', history)}\n                  {th.featureCreator('Multi-zone Climate Control', 'climate_control', history)}\n                  {th.featureCreator('Sun/Moon Roof', 'sun_roof', history)}\n                </Accordion>\n                <Accordion btnText='Entertainment'>\n                  {th.featureCreator('DVD Player', 'dvd_player', history)}\n                  {th.featureCreator('Premium Sound', 'prem_sound', history)}\n                  {th.featureCreator('Rear Entertainment System', 'rear_system', history)}\n                  {th.featureCreator('Satillite Radio', 'satillite_radio', history)}\n                </Accordion>\n                <Accordion btnText='Safety'>\n                  {th.featureCreator('Automatic Braking', 'auto_brake', history)}\n                  {th.featureCreator('Backup Camera', 'back_cam', history)}\n                  {th.featureCreator('Blind Spot Sensors', 'blind_sensor', history)}\n                  {th.featureCreator('Lane Departure Warning', 'lane_depart', history)}\n                  {th.featureCreator('Parking Sensors', 'park_sense', history)}\n                  {th.featureCreator('Security Alarm', 'secure_alarm', history)}\n                </Accordion>\n              </div>\n              <div>\n                <Accordion btnText='Tech'>\n                  {th.featureCreator('Adaptive Cruise Control', 'adapt_cruise', history)}\n                  {th.featureCreator('Android Auto', 'android_auto', history)}\n                  {th.featureCreator('Apple CarPlay', 'apple_carplay', history)}\n                  {th.featureCreator('AUX Audio Port', 'aux_port', history)}\n                  {th.featureCreator('Bluetooth', 'bluetooth', history)}\n                  {th.featureCreator('GPS Navigation', 'gps_nav', history)}\n                  {th.featureCreator('Heads Up Display', 'hud', history)}\n                  {th.featureCreator('Keyless Ignition/Remote Start', 'keyless_start', history)}\n                  {th.featureCreator('Mobile Internet', 'mobile_net', history)}\n                  {th.featureCreator('Power Seat(s)', 'power_seats', history)}\n                  {th.featureCreator('Trip Computer', 'trip_pc', history)}\n                  {th.featureCreator('Turn Signal Mirrors', 'turn_mirrors', history)}\n                </Accordion>\n                <Accordion btnText='Utility'>\n                  {th.featureCreator('Adjustable Steering Wheel', 'adjust_steering', history)}\n                  {th.featureCreator('Automatic Parking', 'auto_park', history)}\n                  {th.featureCreator('Disability Equipped', 'disability', history)}\n                  {th.featureCreator('Heated Mirrors', 'heat_mirror', history)}\n                  {th.featureCreator('Power Sliding Doors', 'power_doors', history)}\n                  {th.featureCreator('Power Trunk/Liftgate', 'power_trunk', history)}\n                  {th.featureCreator('Rain Sensing Wipers', 'rain_sense', history)}\n                  {th.featureCreator('Roof Rack', 'roof_rack', history)}\n                  {th.featureCreator('Stability Control', 'stability', history)}\n                  {th.featureCreator('Third Row Seats', 'third_row', history)}\n                  {th.featureCreator('Tire Pressure Sensors', 'tire_sense', history)}\n                  {th.featureCreator('Tow Hitch', 'tow_hitch', history)}\n                </Accordion>\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='More Filters' className='more-features' extraModalBtns={1}>\n            <div className='container'>\n              <div className='block1'>\n                <div className='slider-content'>\n                  <div className='inputs'>\n                    <label htmlFor='mpgBoxes'>MPG</label>\n                    <span className='input-number'>$\n                      <input\n                        name='mpgBoxes'\n                        type='number'\n                        id='mpg'\n                        min='0'\n                        max='100'\n                        value={th.state.mpgBoxes}\n                        onChange={th.onNumberChange.bind(th, 'mpgBoxes', 'mpgSlider', 0, history)}\n                        onKeyDown={th.enterPressed.bind(th, 'mpgSlider', 0, history)} />\n                      </span>\n                  </div>\n                  <div className='slider-container'>\n                    <Range\n                      step={10}\n                      min={0}\n                      max={100}\n                      values={th.state.mpgSlider}\n                      onChange={(values) => th.setState({mpgSlider: values, mpgBoxes: values},\n                        th.updateUrlFromTimeout(history))}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.mpgSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 0,\n                            max: 100\n                          })}}>\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className='fuel-types'>\n                  <p>Fuel Type</p>\n                  <div>\n                    {th.featureCreator('Gas', 'fuelGas', history)}\n                    {th.featureCreator('Hybrid', 'fuelHybrid', history)}\n                    {th.featureCreator('Electric', 'fuelElectric', history)}\n                    {th.featureCreator('Other', 'fuelOther', history)}\n                  </div>\n                </div>\n              </div>\n              <div className='block2'>\n                <div>\n                  <p>Drive Type</p>\n                  <div>\n                    {th.featureCreator('Front', 'frontWheel', history)}\n                    {th.featureCreator('All', 'allWheel', history)}\n                    {th.featureCreator('Rear', 'rearWheel', history)}\n                  </div>\n                </div>\n                <div>\n                  <p>Transmission</p>\n                  <div>\n                    {th.featureCreator('Automatic', 'autoTrans', history)}\n                    {th.featureCreator('Manual', 'manualTrans', history)}\n                  </div>\n                </div>\n                <div>\n                  <p>Cylinders</p>\n                  <div>\n                    {th.featureCreator('4', 'fourCylinder', history)}\n                    {th.featureCreator('6', 'sixCylinder', history)}\n                    {th.featureCreator('8', 'eightCylinder', history)}\n                    {th.featureCreator('Other', 'otherCylinder', history)}\n                  </div>\n                </div>\n              </div>\n              <div className='color-block'>\n                <p>Exterior Color</p>\n                <div className='colors'>\n                  {th.colorCreator('Black', '#000', 'exterior_black', history, 'black')}\n                  {th.colorCreator('Silver', '#e0e0e0', 'exterior_silver', history)}\n                  {th.colorCreator('White', '#fff', 'exterior_white', history)}\n                  {th.colorCreator('Gray', '#989898', 'exterior_gray', history)}\n                  {th.colorCreator('Red', '#dc4444', 'exterior_red', history)}\n                  {th.colorCreator('Blue', '#3f72b0', 'exterior_blue', history)}\n                  {th.colorCreator('Gold', '#c29050', 'exterior_gold', history)}\n                  {th.colorCreator('Orange', '#da7938', 'exterior_orange', history)}\n                  {th.colorCreator('Green', '#748959', 'exterior_green', history)}\n                  {th.colorCreator('Tan', '#f5deb3', 'exterior_tan', history)}\n                  {th.colorCreator('Other', `linear-gradient(\n                    90deg,\n                    rgba(255, 0, 0, 1) 0%,\n                    rgba(255, 154, 0, 1) 10%,\n                    rgba(208, 222, 33, 1) 20%,\n                    rgba(79, 220, 74, 1) 30%,\n                    rgba(63, 218, 216, 1) 40%,\n                    rgba(47, 201, 226, 1) 50%,\n                    rgba(28, 127, 238, 1) 60%,\n                    rgba(95, 21, 242, 1) 70%,\n                    rgba(186, 12, 248, 1) 80%,\n                    rgba(251, 7, 217, 1) 90%,\n                    rgba(255, 0, 0, 1) 100%`, 'exterior_other', history)}\n                </div>\n              </div>\n              <div className='color-block'>\n                <p>Interior Color</p>\n                <div className='colors'>\n                  {th.colorCreator('Black', '#000', 'interior_black', history, 'black')}\n                  {th.colorCreator('Silver', '#e0e0e0', 'interior_silver', history)}\n                  {th.colorCreator('White', '#fff', 'interior_white', history)}\n                  {th.colorCreator('Gray', '#989898', 'interior_gray', history)}\n                  {th.colorCreator('Red', '#dc4444', 'interior_red', history)}\n                  {th.colorCreator('Blue', '#3f72b0', 'interior_blue', history)}\n                  {th.colorCreator('Gold', '#c29050', 'interior_gold', history)}\n                  {th.colorCreator('Orange', '#da7938', 'interior_orange', history)}\n                  {th.colorCreator('Green', '#748959', 'interior_green', history)}\n                  {th.colorCreator('Tan', '#f5deb3', 'interior_tan', history)}\n                  {th.colorCreator('Other', `linear-gradient(\n                    90deg,\n                    rgba(255, 0, 0, 1) 0%,\n                    rgba(255, 154, 0, 1) 10%,\n                    rgba(208, 222, 33, 1) 20%,\n                    rgba(79, 220, 74, 1) 30%,\n                    rgba(63, 218, 216, 1) 40%,\n                    rgba(47, 201, 226, 1) 50%,\n                    rgba(28, 127, 238, 1) 60%,\n                    rgba(95, 21, 242, 1) 70%,\n                    rgba(186, 12, 248, 1) 80%,\n                    rgba(251, 7, 217, 1) 90%,\n                    rgba(255, 0, 0, 1) 100%`, 'interior_other', history)}\n                </div>\n              </div>\n            </div>\n          </DropDown>\n        </div>\n      </div>\n    );\n  };\n\nexport default Filters;\n","/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js",["104","105","106","107","108","109","110"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar';\n\nimport { makesList, modelsList } from './makes_models';\nimport DropDown from './drop_down';\nimport 'simplebar/dist/simplebar.min.css';\n\nfunction getIndex(value, arr, prop) {\n  for (var i = 0; i < arr.length; i++) {\n    if (value.toLowerCase().includes(arr[i][prop].toLowerCase())) {\n      return i;\n    }\n  }\n  return -1; //to handle the case where the value doesn't exist\n}\n\nfunction getModelsIndex(value, arr, prop) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr[i][prop].length; j++) {\n      if (arr[i].name + ' ' + arr[i][prop][j] === value) {\n        return j;\n      }\n    }\n  }\n  return -1; //to handle the case where the value doesn't exist\n}\n\nfunction GetZips(props) {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [zips, setZips] = useState([]);\n\n  console.log('getzips');\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  // red js-PM......3nnc is the key only for localhost testing. must change for builds\n  // red to Q6a4aY87oakQI2BA7YMUIwrqHux0j0BtEV6VAk2egIh5gbzooIdBEcLjoOBpLqsY\n  useEffect(() => {\n    fetch('https://www.zipcodeapi.com/rest/' +\n    'js-PM7I8cxEjfxbX05xYqOa46UXb93zWmxX4amPH8agb5IDqnv3LhwcijDk5Tag3nnc/radius.json/' +\n    props.centerZip + '/' + props.distance + '/mile?minimal')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setZips(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    console.log(zips.zip_codes);\n    return (\n      <ul>\n      </ul>\n    );\n  }\n}\n\nclass AddTags extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      thst: props.th,\n      modelsSearch: [],\n      tagsSearch: [],\n      tagsList: [\n        ['SUVs', 'check_suv'], ['Trucks', 'check_truck'], ['Sedans', 'check_sedan'], ['Crossovers', 'check_crossover'],\n        ['Coupes', 'check_coupe'], ['Convertibles', 'check_convertible'], ['Vans', 'check_van'],\n        ['Wagons', 'check_wagon'],\n      ],\n      searchText: '',\n      displayResults: true,\n      renderNumOptns: false,\n      renderYearOptns: false,\n      inputNum: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.filterData = this.filterData.bind(this);\n    this.changeNumbers = this.changeNumbers.bind(this);\n    this.onKeyDownHandler = this.onKeyDownHandler.bind(this);\n\n    this.wrapperRef = React.createRef();\n    this.textBoxRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  // handle change event of search text input\n  handleChange(event) {\n    this.setState({\n      searchText: event.target.value\n    });\n    this.filterData(event.target.value);\n  };\n\n  // filter records by search text\n  filterData(value) {\n    const lowercasedValue = value.toLowerCase().trim().replace('chevy', 'chevrolet').replace('vw', 'volkswagen')\n    .replace('caddy', 'cadillac').replace('cadd', 'cadillac').replace('lr', 'land rover')\n    .replace('mbz', 'mercedes-benz');\n\n    const filteredModels = modelsList.filter(item =>\n      item.toString().toLowerCase().includes(lowercasedValue)\n    );\n    const filteredTags = this.state.tagsList.filter(item =>\n      item[0].toString().toLowerCase().includes(lowercasedValue)\n    );\n\n    if (!isNaN(lowercasedValue)) {\n      this.setState({\n        renderNumOptns: true,\n        inputNum: lowercasedValue\n      });\n      if (lowercasedValue.length === 4) {\n        this.setState({\n          renderYearOptns: true\n        });\n      } else {\n        this.setState({\n          renderYearOptns: false\n        });\n      }\n    } else {\n      this.setState({\n        renderNumOptns: false,\n        renderYearOptns: false,\n        inputNum: 0\n      });\n    }\n\n    this.setState({\n      modelsSearch: filteredModels,\n      tagsSearch: filteredTags\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.setState({\n        displayResults: false\n      });\n    }\n    if (this.textBoxRef && this.textBoxRef.current.contains(event.target)) {\n      this.setState({\n        displayResults: true\n      });\n    }\n  }\n\n  changeNumbers(isYear=false, down=false, monthly=false, miles=false) {\n    if (isYear) {\n      if (this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0])) {\n        this.state.thst.setState({\n          yearSlider: [1800, 2090],\n          yearBoxes: [1800, 2090]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      } else if (this.state.inputNum >= 1800 && this.state.inputNum <= 2090) {\n        this.state.thst.setState({\n          yearSlider: [this.state.inputNum, this.state.inputNum],\n          yearBoxes: [this.state.inputNum, this.state.inputNum]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      }\n    } else if (down && this.state.inputNum >= 100 && this.state.inputNum <= 99990) {\n      this.state.thst.setState({\n        downFinanceSlider: [this.state.inputNum],\n        downFinanceBoxes: [this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else if (monthly && this.state.inputNum >= 100 && this.state.inputNum <= 99990) {\n      this.state.thst.setState({\n        monthlyFinanceSlider: [this.state.inputNum],\n        monthlyFinanceBoxes: [this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else if (miles && this.state.inputNum <= 200000) {\n      this.state.thst.setState({\n        mileageSlider: [0, this.state.inputNum],\n        mileageBoxes: [0, this.state.inputNum]\n      }, () => (\n        this.state.thst.updateURL(this.props.history)\n      ));\n    } else {\n      if (this.state.inputNum <= 999990) {\n        this.state.thst.setState({\n          values: [100, this.state.inputNum],\n          priceBoxes: [100, this.state.inputNum]\n        }, () => (\n          this.state.thst.updateURL(this.props.history)\n        ));\n      }\n    }\n  }\n\n  onKeyDownHandler = e => {\n    if (e.keyCode === 13 && this.state.renderNumOptns) {\n      if (this.state.inputNum.length === 4) {\n        this.changeNumbers(true);\n      } else {\n        this.changeNumbers();\n      }\n    }\n  };\n\n  render() {\n    const modelsToRender = modelsList.map((model, i) => {\n      if (this.props.modlBoxes[\n        makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n      ][getModelsIndex(model, makesList, 'models')]) {\n        return <li key={i}>\n          <label htmlFor={'modelBox2' + i}>\n            <p>{model}</p>\n            <i className='fas fa-times'></i>\n          </label>\n          <input\n            type='checkbox'\n            name={model}\n            id={'modelBox2' + i}\n            checked={this.props.modlBoxes[\n              makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n            ][getModelsIndex(model, makesList, 'models')] || ''}\n            onChange={(e) => this.props.handleBoxChange(\n              makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\n              , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\n        </li>;\n      }\n    });\n\n    const tagsToRender = this.state.tagsList.map((tag, i) => {\n      if (this.state.thst.state[tag[1]]) {\n        return <li key={i}>\n          <label htmlFor={'tag' + i}>\n            <p>{tag[0]}</p>\n            <i className='fas fa-times'></i>\n          </label>\n          <input\n            type='checkbox'\n            name={tag[1]}\n            id={'tag' + i}\n            checked={this.state.thst.state[tag[1]] || ''}\n            onChange={(e) => this.props.handleInputChange(e, this.props.history)} />\n        </li>;\n      }\n    });\n\n    return (\n      <div className='search-container' ref={this.wrapperRef}>\n        <div className='searchbox'>\n          <input\n            type='text'\n            placeholder='Type to search...'\n            value={this.state.searchText}\n            onKeyDown={this.onKeyDownHandler}\n            onChange={this.handleChange}\n            ref={this.textBoxRef}\n          />\n        {\n          (!modelsToRender.every((item) => {return item === undefined;}) ||\n          !tagsToRender.every((item) => {return item === undefined;}) ||\n          this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0])) &&\n          <DropDown btnText='Change Tags' isChanging={false} className='tags-dd'>\n            <ul>\n              {this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0]) && <li>\n                <label htmlFor='year'>\n                  <p>{this.state.thst.state.yearSlider[0]}</p>\n                  <i className='fas fa-times'></i>\n                </label>\n                <input\n                  type='checkbox'\n                  name={this.state.thst.state.yearSlider[0]}\n                  id='year'\n                  checked={this.state.thst.state.yearSlider.every(e => e === this.state.thst.state.yearSlider[0]) || ''}\n                  onChange={this.changeNumbers} />\n              </li>}\n              {modelsToRender}\n              {tagsToRender}\n            </ul>\n          </DropDown>\n        }\n        </div>\n\n        {(this.state.modelsSearch.length > 0 || this.state.tagsSearch.length > 0 || this.state.renderNumOptns) &&\n          this.state.searchText != '' && this.state.displayResults && <div className='box-container'>\n          <ul>\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers()}>\n                <p>Vehicles less than ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, true)}>\n                <p>Cash down at ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, false, true)}>\n                <p>Monthly payment at ${this.state.inputNum}</p>\n              </button>\n            </li>}\n            {this.state.renderNumOptns && <li>\n              <button onClick={(e) => this.changeNumbers(false, false, false, true)}>\n                <p>Vehicles with less than {this.state.inputNum} miles</p>\n              </button>\n            </li>}\n            {this.state.renderYearOptns && <li>\n              <label htmlFor='setYear'>\n                {this.state.thst.state.yearSlider.every(e => e === this.state.inputNum) ?\n                  <i className='checkmark fas fa-check'></i> : ''}\n                <p>Vehicles with year {this.state.inputNum}</p>\n              </label>\n              <input\n                type='checkbox'\n                name={this.state.inputNum}\n                id='setYear'\n                checked={this.state.thst.state.yearSlider.every(e => e === this.state.inputNum) || ''}\n                onChange={(e) => this.changeNumbers(true)} />\n            </li>}\n            {this.state.modelsSearch.map((model, i) => {\n              return <li key={i}>\n                <label htmlFor={'modelBox2' + i}>\n                  {this.props.modlBoxes[\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n                  ][getModelsIndex(model, makesList, 'models')] ? <i className='checkmark fas fa-check'></i> : ''}\n                  <p>{model}</p>\n                </label>\n                <input\n                  type='checkbox'\n                  name={model}\n                  id={'modelBox2' + i}\n                  checked={this.props.modlBoxes[\n                    makesList[getIndex(model, makesList, 'name')].id + 'ModelBoxes'\n                  ][getModelsIndex(model, makesList, 'models')] || ''}\n                  onChange={(e) => this.props.handleBoxChange(\n                    makesList[getIndex(model, makesList, 'name')].id, getModelsIndex(model, makesList, 'models')\n                    , this.props.history, makesList[getIndex(model, makesList, 'name')].name, model)} />\n              </li>;\n            })}\n            {this.state.tagsSearch.map((tag, i) => {\n              return <li key={i}>\n                <label htmlFor={'tag' + i}>\n                  {this.state.thst.state[tag[1]] ? <i className='checkmark fas fa-check'></i> : ''}\n                  <p>{tag[0]}</p>\n                </label>\n                <input\n                  type='checkbox'\n                  name={tag[1]}\n                  id={'tag' + i}\n                  checked={this.state.thst.state[tag[1]] || ''}\n                  onChange={(e) => this.props.handleInputChange(e, this.props.history)} />\n              </li>;\n            })}\n          </ul>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default AddTags;\n","/home/talking_human/Documents/github/car_selling_site/src/car_page.js",["111","112","113","114","115","116","117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":42,"nodeType":"125","messageId":"126","endLine":3,"endColumn":52},{"ruleId":"123","severity":1,"message":"127","line":3,"column":54,"nodeType":"125","messageId":"126","endLine":3,"endColumn":65},{"ruleId":"123","severity":1,"message":"128","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"123","severity":1,"message":"130","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":12},{"ruleId":"123","severity":1,"message":"131","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":17},{"ruleId":"123","severity":1,"message":"132","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":14},{"ruleId":"123","severity":1,"message":"133","line":13,"column":10,"nodeType":"125","messageId":"126","endLine":13,"endColumn":15},{"ruleId":"123","severity":1,"message":"134","line":13,"column":17,"nodeType":"125","messageId":"126","endLine":13,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":144,"column":29,"nodeType":"137","messageId":"138","endLine":144,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":188,"column":11,"nodeType":"125","messageId":"141","endLine":188,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":205,"column":11,"nodeType":"125","messageId":"141","endLine":205,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":222,"column":11,"nodeType":"125","messageId":"141","endLine":222,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":239,"column":11,"nodeType":"125","messageId":"141","endLine":239,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":256,"column":11,"nodeType":"125","messageId":"141","endLine":256,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":273,"column":11,"nodeType":"125","messageId":"141","endLine":273,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":290,"column":11,"nodeType":"125","messageId":"141","endLine":290,"endColumn":18},{"ruleId":"139","severity":1,"message":"142","line":429,"column":11,"nodeType":"125","messageId":"141","endLine":429,"endColumn":18},{"ruleId":"139","severity":1,"message":"143","line":433,"column":11,"nodeType":"125","messageId":"141","endLine":433,"endColumn":25},{"ruleId":"135","severity":1,"message":"144","line":524,"column":35,"nodeType":"137","messageId":"145","endLine":524,"endColumn":37},{"ruleId":"146","severity":1,"message":"147","line":8,"column":9,"nodeType":"148","endLine":8,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":9,"column":9,"nodeType":"148","endLine":9,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":10,"column":9,"nodeType":"148","endLine":10,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":11,"column":9,"nodeType":"148","endLine":11,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":12,"column":9,"nodeType":"148","endLine":12,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":13,"column":9,"nodeType":"148","endLine":13,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":14,"column":9,"nodeType":"148","endLine":14,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":15,"column":9,"nodeType":"148","endLine":15,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":16,"column":9,"nodeType":"148","endLine":16,"endColumn":21},{"ruleId":"123","severity":1,"message":"149","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"150","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":17},{"ruleId":"123","severity":1,"message":"151","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"152","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":16},{"ruleId":"123","severity":1,"message":"153","line":3,"column":27,"nodeType":"125","messageId":"126","endLine":3,"endColumn":33},{"ruleId":"123","severity":1,"message":"154","line":3,"column":35,"nodeType":"125","messageId":"126","endLine":3,"endColumn":40},{"ruleId":"123","severity":1,"message":"127","line":3,"column":54,"nodeType":"125","messageId":"126","endLine":3,"endColumn":65},{"ruleId":"123","severity":1,"message":"155","line":11,"column":8,"nodeType":"125","messageId":"126","endLine":11,"endColumn":16},{"ruleId":"123","severity":1,"message":"156","line":13,"column":8,"nodeType":"125","messageId":"126","endLine":13,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":37,"column":15,"nodeType":"159","endLine":37,"endColumn":74},{"ruleId":"123","severity":1,"message":"150","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":17},{"ruleId":"123","severity":1,"message":"151","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"160","line":29,"column":10,"nodeType":"125","messageId":"126","endLine":29,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":60,"column":6,"nodeType":"163","endLine":60,"endColumn":8,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"144","line":236,"column":54,"nodeType":"137","messageId":"145","endLine":236,"endColumn":56},{"ruleId":"135","severity":1,"message":"144","line":259,"column":59,"nodeType":"137","messageId":"145","endLine":259,"endColumn":61},{"ruleId":"165","severity":1,"message":"166","line":313,"column":33,"nodeType":"167","messageId":"168","endLine":313,"endColumn":35},{"ruleId":"123","severity":1,"message":"128","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":16},{"ruleId":"123","severity":1,"message":"130","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":12},{"ruleId":"123","severity":1,"message":"131","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"169","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":42,"column":9,"nodeType":"148","endLine":44,"endColumn":115},{"ruleId":"170","severity":1,"message":"171","line":59,"column":19,"nodeType":"148","endLine":66,"endColumn":23},{"ruleId":"135","severity":1,"message":"144","line":80,"column":33,"nodeType":"137","messageId":"145","endLine":80,"endColumn":35},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'images' is defined but never used.","'DropDown' is defined but never used.","'Tabs' is defined but never used.","'Accordion' is defined but never used.","'Search' is defined but never used.","'Range' is defined but never used.","'getTrackBackground' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'varName' is already defined.","redeclared","'tempVar' is already defined.","'tempModelBoxes' is already defined.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'PropTypes' is defined but never used.","'SimpleBar' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'vehicles' is defined but never used.","'reportWebVitals' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'GetZips' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.centerZip' and 'props.distance'. Either include them or remove the dependency array.","ArrayExpression",["174"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'makesList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [props.centerZip, props.distance]",{"range":"177","text":"178"},[1887,1889],"[props.centerZip, props.distance]"]