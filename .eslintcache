[{"/home/talking_human/Documents/github/car_selling_site/src/index.js":"1","/home/talking_human/Documents/github/car_selling_site/src/search.js":"2","/home/talking_human/Documents/github/car_selling_site/src/images.js":"3","/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js":"4","/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js":"5","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js":"6","/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js":"7","/home/talking_human/Documents/github/car_selling_site/src/components/search.js":"8","/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js":"9","/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js":"10","/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js":"11","/home/talking_human/Documents/github/car_selling_site/src/filters.js":"12","/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js":"13"},{"size":13860,"mtime":1620433368482,"results":"14","hashOfConfig":"15"},{"size":23877,"mtime":1629604128356,"results":"16","hashOfConfig":"15"},{"size":631,"mtime":1622753847695,"results":"17","hashOfConfig":"15"},{"size":375,"mtime":1617675839819,"results":"18","hashOfConfig":"15"},{"size":1176,"mtime":1617675839821,"results":"19","hashOfConfig":"15"},{"size":3048,"mtime":1619750184296,"results":"20","hashOfConfig":"15"},{"size":1041,"mtime":1617675839781,"results":"21","hashOfConfig":"15"},{"size":6802,"mtime":1630623938650,"results":"22","hashOfConfig":"15"},{"size":1189,"mtime":1626676938417,"results":"23","hashOfConfig":"15"},{"size":20004,"mtime":1617675839783,"results":"24","hashOfConfig":"15"},{"size":957,"mtime":1628994061710,"results":"25","hashOfConfig":"15"},{"size":27409,"mtime":1629784264358,"results":"26","hashOfConfig":"15"},{"size":11332,"mtime":1630634868012,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1bl3nea",{"filePath":"31","messages":"32","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/talking_human/Documents/github/car_selling_site/src/index.js",[],["58","59"],"/home/talking_human/Documents/github/car_selling_site/src/search.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport './css/search.css';\r\nimport images from './images';\r\nimport DropDown from './components/drop_down';\r\nimport Tabs from './components/tabs';\r\nimport Accordion from './components/accordion';\r\nimport Search from './components/search';\r\nimport { makesList } from './components/makes_models';\r\nimport vehicles from './vehicleCardList';\r\nimport Filters from './filters';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nclass SearchForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    var bt = new URLSearchParams(window.location.search).get('btype').toLowerCase();\r\n    var ftr = new URLSearchParams(window.location.search).get('ftr').toLowerCase();\r\n    var fuel = new URLSearchParams(window.location.search).get('fuel').toLowerCase();\r\n    var drive = new URLSearchParams(window.location.search).get('drive').toLowerCase();\r\n    var trans = new URLSearchParams(window.location.search).get('trans').toLowerCase();\r\n    var cyl = new URLSearchParams(window.location.search).get('cyl').toLowerCase();\r\n    var extor = new URLSearchParams(window.location.search).get('extor').toLowerCase();\r\n    var intor = new URLSearchParams(window.location.search).get('intor').toLowerCase();\r\n\r\n    super(props);\r\n    this.state = {\r\n      search_tag: '',\r\n      zipCode: '',\r\n      distance: 0,\r\n      financeOrPrice: new URLSearchParams(window.location.search).getAll('price'),\r\n      priceBoxes: new URLSearchParams(window.location.search).getAll('pr'),\r\n      values: new URLSearchParams(window.location.search).getAll('pr'),\r\n      yearBoxes: new URLSearchParams(window.location.search).getAll('year'),\r\n      yearSlider: new URLSearchParams(window.location.search).getAll('year'),\r\n      mileageBoxes: new URLSearchParams(window.location.search).getAll('miles'),\r\n      mileageSlider: new URLSearchParams(window.location.search).getAll('miles'),\r\n      downFinanceSlider: new URLSearchParams(window.location.search).getAll('down'),\r\n      downFinanceBox: new URLSearchParams(window.location.search).getAll('down'),\r\n      monthlyFinanceSlider: new URLSearchParams(window.location.search).getAll('pay'),\r\n      monthlyFinanceBox: new URLSearchParams(window.location.search).getAll('pay'),\r\n      typing: false,\r\n      typingTimeout: 0,\r\n      modelBoxes: {\r\n        acuraModelBoxes: [], alfaModelBoxes: [], audiModelBoxes: [], bmwModelBoxes: [], buickModelBoxes: [],\r\n        cadillacModelBoxes: [], chevyModelBoxes: [], chryslerModelBoxes: [], dodgeModelBoxes: [],\r\n        fiatModelBoxes: [], fordModelBoxes: [], genesisModelBoxes: [], gmcModelBoxes: [], hondaModelBoxes: [],\r\n        hyundaiModelBoxes: [], infinitiModelBoxes: [], jaguarModelBoxes: [], jeepModelBoxes: [], kiaModelBoxes: [],\r\n        roverModelBoxes: [], lexusModelBoxes: [], lincolnModelBoxes: [], maseratiModelBoxes: [], mazdaModelBoxes: [],\r\n        benzModelBoxes: [], miniModelBoxes: [], mitsubishiModelBoxes: [], nissanModelBoxes: [], porscheModelBoxes: [],\r\n        ramModelBoxes: [], saabModelBoxes: [], scionModelBoxes: [], smartModelBoxes: [], subaruModelBoxes: [],\r\n        teslaModelBoxes: [], toyotaModelBoxes: [], volksModelBoxes: [], volvoModelBoxes: []\r\n      },\r\n      bodyType: bt,\r\n      check_suv: bt.includes('suv'), check_truck: bt.includes('truck'), check_sedan: bt.includes('sedan'),\r\n      check_crossover: bt.includes('crossover'), check_coupe: bt.includes('coupe'),\r\n      check_convertible: bt.includes('convertible'), check_sport: bt.includes('sport'), check_van: bt.includes('van'),\r\n      check_wagon: bt.includes('wagon'),\r\n\r\n      features: ftr,\r\n      cooled_seats: ftr.includes('cooled_seats'),heated_seats: ftr.includes('heated_seats'),\r\n      heated_steering: ftr.includes('heated_steering'),leather_seats: ftr.includes('leather_seats'),\r\n      climate_control: ftr.includes('climate_control'),sun_roof: ftr.includes('sun_roof'),\r\n      dvd_player: ftr.includes('dvd_player'),prem_sound: ftr.includes('prem_sound'),\r\n      rear_system: ftr.includes('rear_system'),satillite_radio: ftr.includes('satillite_radio'),\r\n      auto_brake: ftr.includes('auto_brake'),back_cam: ftr.includes('back_cam'),\r\n      blind_sensor: ftr.includes('blind_sensor'),lane_depart: ftr.includes('lane_depart'),\r\n      park_sense: ftr.includes('park_sense'),secure_alarm: ftr.includes('secure_alarm'),\r\n      adapt_cruise: ftr.includes('adapt_cruise'),android_auto: ftr.includes('android_auto'),\r\n      apple_carplay: ftr.includes('apple_carplay'),aux_port: ftr.includes('aux_port'),\r\n      bluetooth: ftr.includes('bluetooth'),gps_nav: ftr.includes('gps_nav'),hud: ftr.includes('hud'),\r\n      keyless_start: ftr.includes('keyless_start'),mobile_net: ftr.includes('mobile_net'),\r\n      power_seats: ftr.includes('power_seats'),trip_pc: ftr.includes('trip_pc'),\r\n      turn_mirrors: ftr.includes('turn_mirrors'),adjust_steering: ftr.includes('adjust_steering'),\r\n      auto_park: ftr.includes('auto_park'),disability: ftr.includes('disability'),\r\n      heat_mirror: ftr.includes('heat_mirror'),power_doors: ftr.includes('power_doors'),\r\n      power_trunk: ftr.includes('power_trunk'),rain_sense: ftr.includes('rain_sense'),\r\n      roof_rack: ftr.includes('roof_rack'),stability: ftr.includes('stability'),\r\n      third_row: ftr.includes('third_row'),tire_sense: ftr.includes('tire_sense'),tow_hitch: ftr.includes('tow_hitch'),\r\n\r\n      exterior: extor,\r\n      exterior_black: extor.includes('black'), exterior_silver: extor.includes('silver'),\r\n      exterior_white: extor.includes('white'), exterior_gray: extor.includes('gray'),\r\n      exterior_red: extor.includes('red'), exterior_blue: extor.includes('blue'), exterior_gold: extor.includes('gold'),\r\n      exterior_orange: extor.includes('orange'), exterior_green: extor.includes('green'),\r\n      exterior_brown: extor.includes('brown'), exterior_other: extor.includes('other'),\r\n\r\n      interior: intor,\r\n      interior_black: intor.includes('black'), interior_silver: intor.includes('silver'),\r\n      interior_white: intor.includes('white'), interior_gray: intor.includes('gray'),\r\n      interior_red: intor.includes('red'), interior_blue: intor.includes('blue'), interior_gold: intor.includes('gold'),\r\n      interior_orange: intor.includes('orange'), interior_green: intor.includes('green'),\r\n      interior_brown: intor.includes('brown'), interior_other: intor.includes('other'),\r\n\r\n      mpgSlider: new URLSearchParams(window.location.search).getAll('mpg'),\r\n      mpgBox: new URLSearchParams(window.location.search).getAll('mpg'),\r\n\r\n      fuelType: fuel,\r\n      fuelGas: fuel.includes('fuelgas'), fuelHybrid: fuel.includes('fuelhybrid'),\r\n      fuelElectric: fuel.includes('fuelelectric'), fuelOther: fuel.includes('fuelother'),\r\n\r\n      driveType: drive,\r\n      frontWheel: drive.includes('frontwheel'), allWheel: drive.includes('allwheel'),\r\n      rearWheel: drive.includes('rearwheel'),\r\n\r\n      tranny: trans,\r\n      autoTrans: trans.includes('autotrans'), manualTrans: trans.includes('manualtrans'),\r\n\r\n      cylCount: cyl,\r\n      fourCylinder: cyl.includes('fourcylinder'), sixCylinder: cyl.includes('sixcylinder'),\r\n      eightCylinder: cyl.includes('eightcylinder'), otherCylinder: cyl.includes('othercylinder'),\r\n\r\n      makeParam: new URLSearchParams(window.location.search).get('make'),\r\n      modelParam: new URLSearchParams(window.location.search).get('model'),\r\n    };\r\n\r\n    this.init = this.init.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleModelBoxChange = this.handleModelBoxChange.bind(this);\r\n    this.labelCreator = this.labelCreator.bind(this);\r\n    this.featureCreator = this.featureCreator.bind(this);\r\n    this.colorCreator = this.colorCreator.bind(this);\r\n    this.changeTabValue = this.changeTabValue.bind(this);\r\n    this.changeDistance = this.changeDistance.bind(this);\r\n    this.vehicleCardCreator = this.vehicleCardCreator.bind(this);\r\n    this.getParams = this.getParams.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    makesList.map((make, i) => {\r\n      make.models.map((model, j) =>\r\n        this.state.modelParam.toLowerCase().includes(model.toLowerCase()) ?\r\n          this.handleModelBoxChange(make.id, j, this.props.history, make, model, true) : ''\r\n      );\r\n    });\r\n  };\r\n\r\n  btypeGlobal = new URLSearchParams(window.location.search).get('btype');\r\n  ftrGlobal = new URLSearchParams(window.location.search).get('ftr');\r\n  fuelGlobal = new URLSearchParams(window.location.search).get('fuel');\r\n  driveGlobal = new URLSearchParams(window.location.search).get('drive');\r\n  transGlobal = new URLSearchParams(window.location.search).get('trans');\r\n  cylGlobal = new URLSearchParams(window.location.search).get('cyl');\r\n  extorGlobal = new URLSearchParams(window.location.search).get('extor');\r\n  intorGlobal = new URLSearchParams(window.location.search).get('intor');\r\n\r\n  handleInputChange(event, history) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    if (name.includes('check_')) {\r\n      var tempBtypeParam = this.btypeGlobal;\r\n      var varName = name.replace('check_', '');\r\n\r\n      if (value === true) {\r\n        tempBtypeParam = tempBtypeParam + (varName + '|');\r\n      } else {\r\n        tempBtypeParam = tempBtypeParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.btypeGlobal = tempBtypeParam;\r\n      this.setState({\r\n        [name]: value,\r\n        bodyType: tempBtypeParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && !name.includes('fuel') && !name.includes('Wheel') &&\r\n      !name.includes('Trans') && !name.includes('Cylinder') && !name.includes('exterior_') &&\r\n      !name.includes('interior_')\r\n    ) {\r\n      var tempFtrParam = this.ftrGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempFtrParam = tempFtrParam + (varName + '|');\r\n      } else {\r\n        tempFtrParam = tempFtrParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.ftrGlobal = tempFtrParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        features: tempFtrParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_fuel')) {\r\n      var tempfuelParam = this.fuelGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempfuelParam = tempfuelParam + (varName + '|');\r\n      } else {\r\n        tempfuelParam = tempfuelParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.fuelGlobal = tempfuelParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        fuelType: tempfuelParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Wheel')) {\r\n      var tempDriveParam = this.driveGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempDriveParam = tempDriveParam + (varName + '|');\r\n      } else {\r\n        tempDriveParam = tempDriveParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.driveGlobal = tempDriveParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        driveType: tempDriveParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Trans')) {\r\n      var tempTransParam = this.transGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempTransParam = tempTransParam + (varName + '|');\r\n      } else {\r\n        tempTransParam = tempTransParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.transGlobal = tempTransParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        tranny: tempTransParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('feature_') && name.includes('Cylinder')) {\r\n      var tempCylParam = this.cylGlobal;\r\n      var varName = name.replace('feature_', '');\r\n\r\n      if (value === true) {\r\n        tempCylParam = tempCylParam + (varName + '|');\r\n      } else {\r\n        tempCylParam = tempCylParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.cylGlobal = tempCylParam;\r\n      this.setState({\r\n        [varName]: value,\r\n        cylCount: tempCylParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('exterior_')) {\r\n      var tempExtorParam = this.extorGlobal;\r\n      var varName = name.replace('exterior_', '');\r\n\r\n      if (value === true) {\r\n        tempExtorParam = tempExtorParam + (varName + '|');\r\n      } else {\r\n        tempExtorParam = tempExtorParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.extorGlobal = tempExtorParam;\r\n      this.setState({\r\n        ['exterior_' + varName]: value,\r\n        exterior: tempExtorParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else if (name.includes('interior_')) {\r\n      var tempIntorParam = this.intorGlobal;\r\n      var varName = name.replace('interior_', '');\r\n\r\n      if (value === true) {\r\n        tempIntorParam = tempIntorParam + (varName + '|');\r\n      } else {\r\n        tempIntorParam = tempIntorParam.replace(varName + '|', '');\r\n      }\r\n\r\n      this.intorGlobal = tempIntorParam;\r\n      this.setState({\r\n        ['interior_' + varName]: value,\r\n        interior: tempIntorParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('Your favorite flavor is: ' + this.state.slider);\r\n    event.preventDefault();\r\n  }\r\n\r\n  onNumberChange(boxVarName, sliderVarName, index, e) {\r\n\r\n    const self = this;\r\n\r\n    var tempVar = self.state[boxVarName].slice();\r\n\r\n    tempVar[index] = e.target.value;\r\n\r\n    this.setState({\r\n      [boxVarName]: tempVar\r\n    });\r\n\r\n    if (self.state.typingTimeout) {\r\n      clearTimeout(self.state.typingTimeout);\r\n    }\r\n    self.setState({\r\n      typing: false,\r\n      typingTimeout: setTimeout(function() {\r\n        var finalTempVar = self.state[sliderVarName].slice();\r\n\r\n        if (parseInt(e.target.value) < e.target.min) {\r\n          e.target.value = e.target.min;\r\n        };\r\n        if (parseInt(e.target.value) > e.target.max) {\r\n          e.target.value = e.target.max;\r\n        };\r\n\r\n        finalTempVar[index] = e.target.value;\r\n\r\n        self.setState({\r\n          [sliderVarName]: finalTempVar\r\n        });\r\n      }, 1000)\r\n    });\r\n  }\r\n\r\n  enterPressed(sliderVarName, index, e) {\r\n    var code = e.key || e.which;\r\n    if (code === 13 || code === 'Enter') { //13 is the enter keycode\r\n      var finalTempVar = this.state[sliderVarName].slice();\r\n\r\n      if (parseInt(e.target.value) < e.target.min) {\r\n        e.target.value = e.target.min;\r\n      };\r\n      if (parseInt(e.target.value) > e.target.max) {\r\n        e.target.value = e.target.max;\r\n      };\r\n\r\n      finalTempVar[index] = e.target.value;\r\n\r\n      this.setState({\r\n        [sliderVarName]: finalTempVar\r\n      });\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  labelCreator(forInput, fileName, value) {\r\n    if (this.state[forInput] === false) {\r\n      return <label htmlFor={forInput}>\r\n        <i className='checkmark fas fa-check'></i>\r\n        <p>{value}</p>\r\n        <img src={fileName} draggable='false' alt={fileName}/>\r\n      </label>;\r\n    } else {\r\n      return <label htmlFor={forInput} className='selected'>\r\n        <i className='checkmark fas fa-check'></i>\r\n        <p>{value}</p>\r\n        <img src={fileName} draggable='false' alt={fileName}/>\r\n      </label>;\r\n    }\r\n  }\r\n\r\n  modelParamGlobal = new URLSearchParams(window.location.search).get('model');\r\n\r\n  handleModelBoxChange(varName, pos, history, makeName, modelName, startSync) {\r\n    if (startSync === true) {\r\n      var tempVar = this.state.modelBoxes[varName + 'ModelBoxes'].slice();\r\n\r\n      tempVar[pos] = true;\r\n\r\n      var tempModelBoxes = this.state.modelBoxes;\r\n      tempModelBoxes[varName + 'ModelBoxes'] = tempVar;\r\n\r\n      this.setState({\r\n        modelBoxes: tempModelBoxes\r\n      });\r\n    } else {\r\n      const value = !this.state.modelBoxes[varName + 'ModelBoxes'][pos];\r\n\r\n      var tempVar = this.state.modelBoxes[varName + 'ModelBoxes'].slice();\r\n\r\n      tempVar[pos] = value;\r\n\r\n      var tempModelBoxes = this.state.modelBoxes;\r\n      tempModelBoxes[varName + 'ModelBoxes'] = tempVar;\r\n\r\n      var tempModelParam = this.modelParamGlobal;\r\n      if (value === true) {\r\n        tempModelParam = tempModelParam + (modelName.replace(makeName + ' ', '') + '|');\r\n      } else {\r\n        tempModelParam = tempModelParam.replace((modelName.replace(makeName + ' ', '') + '|'), '');\r\n      }\r\n\r\n      this.modelParamGlobal = tempModelParam;\r\n      this.setState({\r\n        modelBoxes: tempModelBoxes,\r\n        modelParam: tempModelParam\r\n      }, () => {\r\n        this.updateURL(history);\r\n      });\r\n    }\r\n  }\r\n  //<i className='checkmark fas fa-check'></i>\r\n  featureCreator(displayText, value, history) {\r\n    return <label htmlFor={value} className={(this.state[value] === true ? ('checked') : (''))}>\r\n\r\n      {displayText}\r\n      <input\r\n        name={'feature_' + value}\r\n        type='checkbox'\r\n        id={value}\r\n        checked={this.state[value]}\r\n        onChange={(e) => this.handleInputChange(e, history)}\r\n        />\r\n    </label>;\r\n  }\r\n\r\n  colorCreator(name, color, value, history, classname) {\r\n    return <label htmlFor={value} className={(this.state[value] === true ?\r\n        ('color checked ' + classname) : ('color ' + classname))}>\r\n      <div className='color-circle' style={{background: color}}>\r\n        <i className='checkmark fas fa-check'></i>\r\n      </div>\r\n      {name}\r\n      <input\r\n        name={value}\r\n        type='checkbox'\r\n        id={value}\r\n        checked={this.state[value]}\r\n        onChange={(e) => this.handleInputChange(e, history)}\r\n        />\r\n    </label>;\r\n  }\r\n\r\n  changeTabValue(value) {\r\n    if (value === 0) {\r\n      this.setState({\r\n        financeOrPrice: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        financeOrPrice: false\r\n      });\r\n    }\r\n  }\r\n\r\n  changeDistance(value) {\r\n    this.setState({\r\n      distance: value\r\n    });\r\n  }\r\n\r\n  vehicleCardCreator() {\r\n    return vehicles.map((vehicle) => {\r\n      if (\r\n        vehicle.make.toLowerCase().includes(this.state.makeParam.toLowerCase()) &&\r\n        new RegExp(this.state.modelParam.toLowerCase().slice(0, -1)).test(vehicle.model.toLowerCase()) &&\r\n        new RegExp(this.state.bodyType.toLowerCase().slice(0, -1)).test(vehicle.bodyType.toLowerCase()) &&\r\n        vehicle.year >= this.state.yearSlider[0] && vehicle.year <= this.state.yearSlider[1] &&\r\n        vehicle.miles >= this.state.mileageSlider[0] && vehicle.miles <= this.state.mileageSlider[1] &&\r\n        this.state.features.slice(0, -1).split('|').every(\r\n          item => vehicle.features.includes(item) || this.state.features === ''\r\n        ) &&\r\n        vehicle.mpg <= this.state.mpgSlider &&\r\n        (this.state.fuelType.toLowerCase().includes(vehicle.fuel.toLowerCase()) || this.state.fuelType === '') &&\r\n        (this.state.driveType.toLowerCase().includes(vehicle.driveType.toLowerCase()) || this.state.driveType === '') &&\r\n        (this.state.tranny.toLowerCase().includes(vehicle.tranny.toLowerCase()) || this.state.tranny === '') &&\r\n        (this.state.cylCount.toLowerCase().includes(vehicle.cylinders.toLowerCase()) || this.state.cylCount === '') &&\r\n        (this.state.exterior.toLowerCase().includes(vehicle.extColor.toLowerCase()) || this.state.exterior === '') &&\r\n        (this.state.interior.toLowerCase().includes(vehicle.intColor.toLowerCase()) || this.state.interior === '')\r\n      ) {\r\n        if (\r\n          this.state.financeOrPrice &&\r\n          (vehicle.price >= this.state.values[0]) && (vehicle.price <= this.state.values[1])\r\n        ) {\r\n          return <div className='card'>\r\n            <i className='checkmark fas fa-check'></i>\r\n            <p>{vehicle.make}</p>\r\n            <p>{vehicle.model}</p>\r\n            <img src='alt' draggable='false' alt='akt'/>\r\n          </div>;\r\n        } else if (\r\n          !this.state.financeOrPrice &&\r\n          vehicle.cashDown <= this.state.downFinanceSlider &&\r\n          vehicle.monthPay <= this.state.monthlyFinanceSlider\r\n        ) {\r\n          return <div className='card'>\r\n            <i className='checkmark fas fa-check'></i>\r\n            <p>{vehicle.make}</p>\r\n            <p>{vehicle.model}</p>\r\n            <img src='alt' draggable='false' alt='akt'/>\r\n          </div>;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getParams(location) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    return {\r\n      make: searchParams.get('make') || '',\r\n      model: searchParams.get('model') || '',\r\n    };\r\n  }\r\n\r\n  setParams({\r\n    price='', pr=['', ''], down='', pay='', make='', model='', btype='', year=['', ''], miles=['', ''], ftr='', mpg='',\r\n    fuel='', drive='', trans='', cyl='', extor='', intor=''\r\n  }) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set('price', price);\r\n    searchParams.set('pr', pr[0]);\r\n    searchParams.append('pr', pr[1]);\r\n    searchParams.set('down', down);\r\n    searchParams.set('pay', pay);\r\n    searchParams.set('make', make);\r\n    searchParams.set('model', model);\r\n    searchParams.set('btype', btype);\r\n    searchParams.set('year', year[0]);\r\n    searchParams.append('year', year[1]);\r\n    searchParams.set('miles', miles[0]);\r\n    searchParams.append('miles', miles[1]);\r\n    searchParams.set('ftr', ftr);\r\n    searchParams.set('mpg', mpg);\r\n    searchParams.set('fuel', fuel);\r\n    searchParams.set('drive', drive);\r\n    searchParams.set('trans', trans);\r\n    searchParams.set('cyl', cyl);\r\n    searchParams.set('extor', extor);\r\n    searchParams.set('intor', intor);\r\n    return searchParams.toString();\r\n  }\r\n\r\n  updateInputValue = e => this.setState({modelParam: e.target.value});\r\n\r\n  updateURL = (history, isTextbox, event) => {\r\n    //if (isTextbox === true) {\r\n    //  if (event.keyCode === 13) {\r\n    //    const url = this.setParams({make: this.state.makeParam, model: this.state.modelParam});\r\n    //    history.push(`?${url}`);\r\n    //  } else {\r\n    //    return;\r\n    //  }\r\n    //}\r\n\r\n    const url = this.setParams({\r\n      price: this.state.financeOrPrice,\r\n      pr: this.state.values,\r\n      down: this.state.downFinanceSlider,\r\n      pay: this.state.monthlyFinanceSlider,\r\n      make: this.state.makeParam,\r\n      model: this.state.modelParam,\r\n      btype: this.state.bodyType,\r\n      year: this.state.yearSlider,\r\n      miles: this.state.mileageSlider,\r\n      ftr: this.state.features,\r\n      mpg: this.state.mpgSlider,\r\n      fuel: this.state.fuelType,\r\n      drive: this.state.driveType,\r\n      trans: this.state.tranny,\r\n      cyl: this.state.cylCount,\r\n      extor: this.state.exterior,\r\n      intor: this.state.interior\r\n    });\r\n    //do not forget the \"?\" !\r\n    history.push(`?${url}`);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Route path='/'\r\n          render={(props) => (\r\n            <Filters {...props} th={this} />\r\n          )}/>\r\n        </Router>\r\n        <div className='vehicle-cards'>\r\n          {this.vehicleCardCreator()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<SearchForm />, document.getElementById('search_form'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/home/talking_human/Documents/github/car_selling_site/src/images.js",[],"/home/talking_human/Documents/github/car_selling_site/src/reportWebVitals.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicle_list.js",["80","81","82","83","84","85","86","87","88"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport images from './images';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <ul>\r\n    <li><a href='#'><img src={images.suv} alt='suv'/>SUVs</a></li>\r\n    <li><a href='#'><img src={images.pickup} alt='pickup truck'/>Pickup Trucks</a></li>\r\n    <li><a href='#'><img src={images.sedan} alt='sedan'/>Sedans</a></li>\r\n    <li><a href='#'><img src={images.crossover} alt='crossover'/>Crossovers</a></li>\r\n    <li><a href='#'><img src={images.coupe} alt='coupe'/>Coupes</a></li>\r\n    <li><a href='#'><img src={images.convertible} alt='convertible'/>Convertibles</a></li>\r\n    <li><a href='#'><img src={images.sports} alt='sports car'/>Sports Cars</a></li>\r\n    <li><a href='#'><img src={images.van} alt='van'/>Vans</a></li>\r\n    <li><a href='#'><img src={images.wagon} alt='wagon'/>Wagons</a></li>\r\n  </ul>\r\n  , document.getElementById('vehicle_list'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","/home/talking_human/Documents/github/car_selling_site/src/components/drop_down.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/accordion.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/search.js",["89","90","91"],"/home/talking_human/Documents/github/car_selling_site/src/components/tabs.js",[],"/home/talking_human/Documents/github/car_selling_site/src/components/makes_models.js",[],"/home/talking_human/Documents/github/car_selling_site/src/vehicleCardList.js",[],"/home/talking_human/Documents/github/car_selling_site/src/filters.js",["92","93","94","95","96","97"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, useHistory, useLocation } from 'react-router-dom';\nimport './css/search.css';\nimport images from './images';\nimport DropDown from './components/drop_down';\nimport Tabs from './components/tabs';\nimport Accordion from './components/accordion';\nimport Search from './components/search';\nimport AddTags from './components/tags_search.js';\nimport vehicles from './vehicleCardList';\nimport { Range, getTrackBackground } from 'react-range';\nimport reportWebVitals from './reportWebVitals';\n\nconst Filters = (props) => {\n\n    const th = props.th;\n\n    const history = useHistory();\n\n    return (\n      <div className='filters'>\n        <div className='search-box'>\n          <AddTags modlBoxes={th.state.modelBoxes} handleBoxChange={th.handleModelBoxChange}\n            handleInputChange={th.handleInputChange} th={th} history={history}/>\n          <div className='second-row'>\n            <p>Near: </p>\n            <input\n              type='test'\n              name='zipCode'\n              placeholder='Zip code'\n              maxLength='5'\n              pattern='\\d*'\n              onKeyDown={th.updateURL.bind(th, history, true)}\n              value={th.state.zipCode}\n              onChange={th.handleInputChange} />\n            <DropDown btnText='Distance' isChanging={true}>\n              <div className='placeholder' display='Distance'></div>\n              <div display='25 Miles' changeDis={th.changeDistance}></div>\n              <div display='50 Miles' changeDis={th.changeDistance}></div>\n              <div display='75 Miles' changeDis={th.changeDistance}></div>\n              <div display='100 Miles' changeDis={th.changeDistance}></div>\n              <div display='250 Miles' changeDis={th.changeDistance}></div>\n              <div display='500 Miles' changeDis={th.changeDistance}></div>\n              <div display='Unlimited' changeDis={th.changeDistance}></div>\n            </DropDown>\n            <button onClick={th.updateURL.bind(th, history)}>\n              <i className='fas fa-search'></i>\n            </button>\n          </div>\n        </div>\n        <div className='drop-downs'>\n          <DropDown btnText='Price' className='price' extraModalBtns={1}>\n            <Tabs changeTabValue={th.changeTabValue} startTab={th.state.financeOrPrice ? 0 : 1}>\n              <div label='Price' className='tab price-tab'>\n                <div className='slider-content'>\n                  <div className='inputs'>\n                    <label>Price Range</label>\n                    <span className='input-number'>$\n                      <input\n                        name='minPrice'\n                        type='number'\n                        id='minPrice'\n                        min='100'\n                        max={th.state.values[1]}\n                        value={th.state.priceBoxes[0]}\n                        onChange={th.onNumberChange.bind(th, 'priceBoxes', 'values', 0)}\n                        onKeyDown={th.enterPressed.bind(th, 'values', 0)} />\n                    </span>\n                    <p>-</p>\n                    <span className='input-number'>$\n                      <input\n                        name='maxPrice'\n                        type='number'\n                        id='maxPrice'\n                        min={th.state.values[0]}\n                        max='999990'\n                        value={th.state.priceBoxes[1]}\n                        onChange={th.onNumberChange.bind(th, 'priceBoxes', 'values', 1)}\n                        onKeyDown={th.enterPressed.bind(th, 'values', 1)} />\n                    </span>\n                  </div>\n                  <div className='slider-container'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={999990}\n                      values={th.state.values}\n                      onChange={(values) => th.setState({values: values, priceBoxes: values})}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.values,\n                            colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 999990\n                          })}} >\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div label='Finance' className='tab finance-tab'>\n                <div className='slider-container'>\n                  <div className='inputs'>\n                    <label htmlFor='downFinanceBox'>Cash Down</label>\n                    <span className='input-number'>$\n                      <input\n                        name='downFinanceBox'\n                        type='number'\n                        id='price1'\n                        min='100'\n                        max='99990'\n                        value={th.state.downFinanceBox}\n                        onChange={th.onNumberChange.bind(th, 'downFinanceBox', 'downFinanceSlider', 0)}\n                        onKeyDown={th.enterPressed.bind(th, 'downFinanceSlider', 0)} />\n                    </span>\n                  </div>\n                  <div className='slider'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={99990}\n                      values={th.state.downFinanceSlider}\n                      onChange={(values) => th.setState({downFinanceSlider: values, downFinanceBox: values})}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.downFinanceSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 99990\n                          })}} >\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className='slider-container'>\n                  <div className='inputs'>\n                    <label htmlFor='monthlyFinanceBox'>Monthly Payment</label>\n                    <span className='input-number'>$\n                      <input\n                        name='monthlyFinanceBox'\n                        type='number'\n                        id='price2'\n                        min='100'\n                        max='99990'\n                        value={th.state.monthlyFinanceBox}\n                        onChange={\n                          th.onNumberChange.bind(th, 'monthlyFinanceBox', 'monthlyFinanceSlider', 0)\n                        }\n                        onKeyDown={th.enterPressed.bind(th, 'monthlyFinanceSlider', 0)} />\n                    </span>\n                  </div>\n                  <div className='slider'>\n                    <Range\n                      step={10}\n                      min={100}\n                      max={99990}\n                      values={th.state.monthlyFinanceSlider}\n                      onChange={\n                        (values) => th.setState({monthlyFinanceSlider: values, monthlyFinanceBox: values})\n                      }\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.monthlyFinanceSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 100,\n                            max: 99990\n                          })}}>\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tabs>\n          </DropDown>\n          <DropDown btnText='Make & Model' className='makemodel' extraModalBtns={1}>\n            <Search value={th.state.modelBoxes} handleBoxChange={th.handleModelBoxChange} th={th} history={history}/>\n          </DropDown>\n          <DropDown btnText='Body Type' className='body-types' extraModalBtns={1}>\n            <div className='container'>\n              <div className='body'>\n                {th.labelCreator('check_suv', images.suv, 'SUVs')}\n                <input\n                  name='check_suv'\n                  type='checkbox'\n                  id='check_suv'\n                  checked={th.state.check_suv}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_truck', images.pickup, 'Trucks')}\n                <input\n                  name='check_truck'\n                  type='checkbox'\n                  id='check_truck'\n                  checked={th.state.check_truck}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_sedan', images.sedan, 'Sedans')}\n                <input\n                  name='check_sedan'\n                  type='checkbox'\n                  id='check_sedan'\n                  checked={th.state.check_sedan}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_crossover', images.crossover, 'Crossovers')}\n                <input\n                  name='check_crossover'\n                  type='checkbox'\n                  id='check_crossover'\n                  checked={th.state.check_crossover}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_coupe', images.coupe, 'Coupes')}\n                <input\n                  name='check_coupe'\n                  type='checkbox'\n                  id='check_coupe'\n                  checked={th.state.check_coupe}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_convertible', images.convertible, 'Convertibles')}\n                <input\n                  name='check_convertible'\n                  type='checkbox'\n                  id='check_convertible'\n                  checked={th.state.check_convertible}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_van', images.van, 'Vans')}\n                <input\n                  name='check_van'\n                  type='checkbox'\n                  id='check_van'\n                  checked={th.state.check_van}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n              <div className='body'>\n                {th.labelCreator('check_wagon', images.wagon, 'Wagons')}\n                <input\n                  name='check_wagon'\n                  type='checkbox'\n                  id='check_wagon'\n                  checked={th.state.check_wagon}\n                  onChange={(e) => th.handleInputChange(e, history)} />\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='Year & Mileage' className='year-mile' extraModalBtns={1}>\n            <div className='container'>\n              <div className='slider-content'>\n                <div className='inputs'>\n                  <label>Year</label>\n                  <span className='input-number'>$\n                    <input\n                      name='minYear'\n                      type='number'\n                      id='minYear'\n                      min='1800'\n                      max={th.state.yearSlider[1]}\n                      value={th.state.yearBoxes[0]}\n                      onChange={th.onNumberChange.bind(th, 'yearBoxes', 'yearSlider', 0)}\n                      onKeyDown={th.enterPressed.bind(th, 'yearSlider', 0)} />\n                  </span>\n                  <p>-</p>\n                  <span className='input-number'>$\n                    <input\n                      name='maxYear'\n                      type='number'\n                      id='maxYear'\n                      min={th.state.yearSlider[0]}\n                      max='2090'\n                      value={th.state.yearBoxes[1]}\n                      onChange={th.onNumberChange.bind(th, 'yearBoxes', 'yearSlider', 1)}\n                      onKeyDown={th.enterPressed.bind(th, 'yearSlider', 1)} />\n                  </span>\n                </div>\n                <div className='slider-container'>\n                  <Range\n                    step={10}\n                    min={1800}\n                    max={2090}\n                    values={th.state.yearSlider}\n                    onChange={(values) => th.setState({yearSlider: values, yearBoxes: values})}\n                    renderTrack={({props, children}) => (\n                      <div {...props} style={{...props.style, background:\n                        getTrackBackground({\n                          values: th.state.yearSlider,\n                          colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                          min: 1800,\n                          max: 2090\n                        })}} >\n                        {children}\n                      </div>\n                    )}\n                    renderThumb={({props}) => (\n                      <div {...props} style={{...props.style}} />\n                    )}\n                  />\n                </div>\n              </div>\n              <div className='slider-content'>\n                <div className='inputs'>\n                  <label>Mileage</label>\n                  <span className='input-number'>$\n                    <input\n                      name='minMileage'\n                      type='number'\n                      id='minMileage'\n                      min='0'\n                      max={th.state.mileageSlider[1]}\n                      value={th.state.mileageBoxes[0]}\n                      onChange={th.onNumberChange.bind(th, 'mileageBoxes', 'mileageSlider', 0)}\n                      onKeyDown={th.enterPressed.bind(th, 'mileageSlider', 0)} />\n                  </span>\n                  <p>-</p>\n                  <span className='input-number'>$\n                    <input\n                      name='maxMileage'\n                      type='number'\n                      id='maxMileage'\n                      min={th.state.mileageSlider[0]}\n                      max='200000'\n                      value={th.state.mileageBoxes[1]}\n                      onChange={th.onNumberChange.bind(th, 'mileageBoxes', 'mileageSlider', 1)}\n                      onKeyDown={th.enterPressed.bind(th, 'mileageSlider', 1)} />\n                  </span>\n                </div>\n                <div className='slider-container'>\n                  <Range\n                    step={10}\n                    min={0}\n                    max={200000}\n                    values={th.state.mileageSlider}\n                    onChange={(values) => th.setState({mileageSlider: values, mileageBoxes: values})}\n                    renderTrack={({props, children}) => (\n                      <div {...props} style={{...props.style, background:\n                        getTrackBackground({\n                          values: th.state.mileageSlider,\n                          colors: ['#133d7f', '#3a85ff', '#133d7f'],\n                          min: 0,\n                          max: 200000\n                        })}} >\n                        {children}\n                      </div>\n                    )}\n                    renderThumb={({props}) => (\n                      <div {...props} style={{...props.style}} />\n                    )}\n                  />\n                </div>\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='Features' className='features' extraModalBtns={1}>\n            <div className='container'>\n              <div>\n                <Accordion btnText='Comfort'>\n                  {th.featureCreator('Cooled Seats', 'cooled_seats', history)}\n                  {th.featureCreator('Heated Seats', 'heated_seats', history)}\n                  {th.featureCreator('Heated Steering Wheel', 'heated_steering', history)}\n                  {th.featureCreator('Leather Seats', 'leather_seats', history)}\n                  {th.featureCreator('Multi-zone Climate Control', 'climate_control', history)}\n                  {th.featureCreator('Sun/Moon Roof', 'sun_roof', history)}\n                </Accordion>\n                <Accordion btnText='Entertainment'>\n                  {th.featureCreator('DVD Player', 'dvd_player', history)}\n                  {th.featureCreator('Premium Sound', 'prem_sound', history)}\n                  {th.featureCreator('Rear Entertainment System', 'rear_system', history)}\n                  {th.featureCreator('Satillite Radio', 'satillite_radio', history)}\n                </Accordion>\n                <Accordion btnText='Safety'>\n                  {th.featureCreator('Automatic Braking', 'auto_brake', history)}\n                  {th.featureCreator('Backup Camera', 'back_cam', history)}\n                  {th.featureCreator('Blind Spot Sensors', 'blind_sensor', history)}\n                  {th.featureCreator('Lane Departure Warning', 'lane_depart', history)}\n                  {th.featureCreator('Parking Sensors', 'park_sense', history)}\n                  {th.featureCreator('Security Alarm', 'secure_alarm', history)}\n                </Accordion>\n              </div>\n              <div>\n                <Accordion btnText='Tech'>\n                  {th.featureCreator('Adaptive Cruise Control', 'adapt_cruise', history)}\n                  {th.featureCreator('Android Auto', 'android_auto', history)}\n                  {th.featureCreator('Apple CarPlay', 'apple_carplay', history)}\n                  {th.featureCreator('AUX Audio Port', 'aux_port', history)}\n                  {th.featureCreator('Bluetooth', 'bluetooth', history)}\n                  {th.featureCreator('GPS Navigation', 'gps_nav', history)}\n                  {th.featureCreator('Heads Up Display', 'hud', history)}\n                  {th.featureCreator('Keyless Ignition/Remote Start', 'keyless_start', history)}\n                  {th.featureCreator('Mobile Internet', 'mobile_net', history)}\n                  {th.featureCreator('Power Seat(s)', 'power_seats', history)}\n                  {th.featureCreator('Trip Computer', 'trip_pc', history)}\n                  {th.featureCreator('Turn Signal Mirrors', 'turn_mirrors', history)}\n                </Accordion>\n                <Accordion btnText='Utility'>\n                  {th.featureCreator('Adjustable Steering Wheel', 'adjust_steering', history)}\n                  {th.featureCreator('Automatic Parking', 'auto_park', history)}\n                  {th.featureCreator('Disability Equipped', 'disability', history)}\n                  {th.featureCreator('Heated Mirrors', 'heat_mirror', history)}\n                  {th.featureCreator('Power Sliding Doors', 'power_doors', history)}\n                  {th.featureCreator('Power Trunk/Liftgate', 'power_trunk', history)}\n                  {th.featureCreator('Rain Sensing Wipers', 'rain_sense', history)}\n                  {th.featureCreator('Roof Rack', 'roof_rack', history)}\n                  {th.featureCreator('Stability Control', 'stability', history)}\n                  {th.featureCreator('Third Row Seats', 'third_row', history)}\n                  {th.featureCreator('Tire Pressure Sensors', 'tire_sense', history)}\n                  {th.featureCreator('Tow Hitch', 'tow_hitch', history)}\n                </Accordion>\n              </div>\n            </div>\n          </DropDown>\n          <DropDown btnText='More Filters' className='more-features' extraModalBtns={1}>\n            <div className='container'>\n              <div className='block1'>\n                <div className='slider-content'>\n                  <div className='inputs'>\n                    <label htmlFor='mpgBox'>MPG</label>\n                    <span className='input-number'>$\n                      <input\n                        name='mpgBox'\n                        type='number'\n                        id='mpg'\n                        min='0'\n                        max='100'\n                        value={th.state.mpgBox}\n                        onChange={th.onNumberChange.bind(th, 'mpgBox', 'mpgSlider', 0)}\n                        onKeyDown={th.enterPressed.bind(th, 'mpgSlider', 0)} />\n                      </span>\n                  </div>\n                  <div className='slider-container'>\n                    <Range\n                      step={10}\n                      min={0}\n                      max={100}\n                      values={th.state.mpgSlider}\n                      onChange={(values) => th.setState({mpgSlider: values, mpgBox: values})}\n                      renderTrack={({props, children}) => (\n                        <div {...props} style={{...props.style, background:\n                          getTrackBackground({\n                            values: th.state.mpgSlider,\n                            colors: ['#3a85ff', '#133d7f'],\n                            min: 0,\n                            max: 100\n                          })}}>\n                          {children}\n                        </div>\n                      )}\n                      renderThumb={({props}) => (\n                        <div {...props} style={{...props.style}} />\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className='fuel-types'>\n                  <p>Fuel Type</p>\n                  <div>\n                    {th.featureCreator('Gas', 'fuelGas', history)}\n                    {th.featureCreator('Hybrid', 'fuelHybrid', history)}\n                    {th.featureCreator('Electric', 'fuelElectric', history)}\n                    {th.featureCreator('Other', 'fuelOther', history)}\n                  </div>\n                </div>\n              </div>\n              <div className='block2'>\n                <div>\n                  <p>Drive Type</p>\n                  <div>\n                    {th.featureCreator('Front', 'frontWheel', history)}\n                    {th.featureCreator('All', 'allWheel', history)}\n                    {th.featureCreator('Rear', 'rearWheel', history)}\n                  </div>\n                </div>\n                <div>\n                  <p>Transmission</p>\n                  <div>\n                    {th.featureCreator('Automatic', 'autoTrans', history)}\n                    {th.featureCreator('Manual', 'manualTrans', history)}\n                  </div>\n                </div>\n                <div>\n                  <p>Cylinders</p>\n                  <div>\n                    {th.featureCreator('4', 'fourCylinder', history)}\n                    {th.featureCreator('6', 'sixCylinder', history)}\n                    {th.featureCreator('8', 'eightCylinder', history)}\n                    {th.featureCreator('Other', 'otherCylinder', history)}\n                  </div>\n                </div>\n              </div>\n              <div className='color-block'>\n                <p>Exterior Color</p>\n                <div className='colors'>\n                  {th.colorCreator('Black', '#000', 'exterior_black', history, 'black')}\n                  {th.colorCreator('Silver', '#e0e0e0', 'exterior_silver', history)}\n                  {th.colorCreator('White', '#fff', 'exterior_white', history)}\n                  {th.colorCreator('Gray', '#989898', 'exterior_gray', history)}\n                  {th.colorCreator('Red', '#dc4444', 'exterior_red', history)}\n                  {th.colorCreator('Blue', '#3f72b0', 'exterior_blue', history)}\n                  {th.colorCreator('Gold', '#c29050', 'exterior_gold', history)}\n                  {th.colorCreator('Orange', '#da7938', 'exterior_orange', history)}\n                  {th.colorCreator('Green', '#748959', 'exterior_green', history)}\n                  {th.colorCreator('Brown', '#76523c', 'exterior_brown', history)}\n                  {th.colorCreator('Other', `linear-gradient(\n                    90deg,\n                    rgba(255, 0, 0, 1) 0%,\n                    rgba(255, 154, 0, 1) 10%,\n                    rgba(208, 222, 33, 1) 20%,\n                    rgba(79, 220, 74, 1) 30%,\n                    rgba(63, 218, 216, 1) 40%,\n                    rgba(47, 201, 226, 1) 50%,\n                    rgba(28, 127, 238, 1) 60%,\n                    rgba(95, 21, 242, 1) 70%,\n                    rgba(186, 12, 248, 1) 80%,\n                    rgba(251, 7, 217, 1) 90%,\n                    rgba(255, 0, 0, 1) 100%`, 'exterior_other', history)}\n                </div>\n              </div>\n              <div className='color-block'>\n                <p>Interior Color</p>\n                <div className='colors'>\n                  {th.colorCreator('Black', '#000', 'interior_black', history, 'black')}\n                  {th.colorCreator('Silver', '#e0e0e0', 'interior_silver', history)}\n                  {th.colorCreator('White', '#fff', 'interior_white', history)}\n                  {th.colorCreator('Gray', '#989898', 'interior_gray', history)}\n                  {th.colorCreator('Red', '#dc4444', 'interior_red', history)}\n                  {th.colorCreator('Blue', '#3f72b0', 'interior_blue', history)}\n                  {th.colorCreator('Gold', '#c29050', 'interior_gold', history)}\n                  {th.colorCreator('Orange', '#da7938', 'interior_orange', history)}\n                  {th.colorCreator('Green', '#748959', 'interior_green', history)}\n                  {th.colorCreator('Brown', '#76523c', 'interior_brown', history)}\n                  {th.colorCreator('Other', `linear-gradient(\n                    90deg,\n                    rgba(255, 0, 0, 1) 0%,\n                    rgba(255, 154, 0, 1) 10%,\n                    rgba(208, 222, 33, 1) 20%,\n                    rgba(79, 220, 74, 1) 30%,\n                    rgba(63, 218, 216, 1) 40%,\n                    rgba(47, 201, 226, 1) 50%,\n                    rgba(28, 127, 238, 1) 60%,\n                    rgba(95, 21, 242, 1) 70%,\n                    rgba(186, 12, 248, 1) 80%,\n                    rgba(251, 7, 217, 1) 90%,\n                    rgba(255, 0, 0, 1) 100%`, 'interior_other', history)}\n                </div>\n              </div>\n            </div>\n          </DropDown>\n        </div>\n      </div>\n    );\n  };\n\nexport default Filters;\n","/home/talking_human/Documents/github/car_selling_site/src/components/tags_search.js",["98","99","100","101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":42,"nodeType":"110","messageId":"111","endLine":3,"endColumn":52},{"ruleId":"108","severity":1,"message":"112","line":3,"column":54,"nodeType":"110","messageId":"111","endLine":3,"endColumn":65},{"ruleId":"108","severity":1,"message":"113","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"115","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":12},{"ruleId":"108","severity":1,"message":"116","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":17},{"ruleId":"108","severity":1,"message":"117","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"108","severity":1,"message":"118","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":15},{"ruleId":"108","severity":1,"message":"119","line":13,"column":17,"nodeType":"110","messageId":"111","endLine":13,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":135,"column":29,"nodeType":"122","messageId":"123","endLine":135,"endColumn":31},{"ruleId":"124","severity":1,"message":"125","line":179,"column":11,"nodeType":"110","messageId":"126","endLine":179,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":196,"column":11,"nodeType":"110","messageId":"126","endLine":196,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":213,"column":11,"nodeType":"110","messageId":"126","endLine":213,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":230,"column":11,"nodeType":"110","messageId":"126","endLine":230,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":247,"column":11,"nodeType":"110","messageId":"126","endLine":247,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":264,"column":11,"nodeType":"110","messageId":"126","endLine":264,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":281,"column":11,"nodeType":"110","messageId":"126","endLine":281,"endColumn":18},{"ruleId":"124","severity":1,"message":"127","line":398,"column":11,"nodeType":"110","messageId":"126","endLine":398,"endColumn":18},{"ruleId":"124","severity":1,"message":"128","line":402,"column":11,"nodeType":"110","messageId":"126","endLine":402,"endColumn":25},{"ruleId":"120","severity":1,"message":"129","line":472,"column":35,"nodeType":"122","messageId":"130","endLine":472,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":8,"column":9,"nodeType":"133","endLine":8,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":9,"column":9,"nodeType":"133","endLine":9,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":10,"column":9,"nodeType":"133","endLine":10,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":11,"column":9,"nodeType":"133","endLine":11,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":12,"column":9,"nodeType":"133","endLine":12,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":13,"column":9,"nodeType":"133","endLine":13,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":14,"column":9,"nodeType":"133","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":15,"column":9,"nodeType":"133","endLine":15,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":16,"column":9,"nodeType":"133","endLine":16,"endColumn":21},{"ruleId":"108","severity":1,"message":"134","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"135","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"136","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"137","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"138","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":33},{"ruleId":"108","severity":1,"message":"139","line":3,"column":35,"nodeType":"110","messageId":"111","endLine":3,"endColumn":40},{"ruleId":"108","severity":1,"message":"112","line":3,"column":54,"nodeType":"110","messageId":"111","endLine":3,"endColumn":65},{"ruleId":"108","severity":1,"message":"140","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":16},{"ruleId":"108","severity":1,"message":"141","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":23},{"ruleId":"108","severity":1,"message":"134","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"135","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"136","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"120","severity":1,"message":"129","line":165,"column":54,"nodeType":"122","messageId":"130","endLine":165,"endColumn":56},{"ruleId":"120","severity":1,"message":"129","line":188,"column":59,"nodeType":"122","messageId":"130","endLine":188,"endColumn":61},{"ruleId":"142","severity":1,"message":"143","line":241,"column":33,"nodeType":"144","messageId":"145","endLine":241,"endColumn":35},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'images' is defined but never used.","'DropDown' is defined but never used.","'Tabs' is defined but never used.","'Accordion' is defined but never used.","'Search' is defined but never used.","'Range' is defined but never used.","'getTrackBackground' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'varName' is already defined.","redeclared","'tempVar' is already defined.","'tempModelBoxes' is already defined.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'PropTypes' is defined but never used.","'SimpleBar' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'vehicles' is defined but never used.","'reportWebVitals' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]